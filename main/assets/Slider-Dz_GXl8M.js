import{j as e,M as s}from"./iframe-Byy88F1j.js";import{useMDXComponents as t}from"./index-C4dRN6FT.js";import{S as n}from"./StoryTemplate-C4YF-pwk.js";import{S as d}from"./Slider.stories-eNl475ot.js";import"./preload-helper-D6kgxu3v.js";import"./PageConstructor-Bi0hmJRQ.js";import"./BackgroundMedia-QDTTQGNJ.js";import"./AnimateBlock-DXZKBt0d.js";import"./inheritsLoose-B6TuBNuE.js";import"./Media-CIKotRfr.js";import"./index-B5mYO5gl.js";import"./cjs-Cz8BQk8L.js";import"./url-CBFUtOHL.js";import"./VideoBlock-B-ZUcs0B.js";import"./debounce-6b_Zi_5j.js";import"./isSymbol-B1lMad5S.js";import"./useAnalytics-zx7-6XI6.js";import"./Image-C3X6puy5.js";import"./constants-D1qj5IDx.js";import"./blocks-cPaPB2NZ.js";import"./toString-Bkw1H4O4.js";import"./addComponentKeysets-CakM3xeG.js";import"./v4-Dv1xt2bl.js";import"./url-C9A5rRC7.js";import"./PlayFill-BemTtglB.js";import"./useUniqId-CL9qg2Zd.js";import"./common-DyHeZKXD.js";import"./Icon-DPFKzBFH.js";import"./useActionHandlers-7ueWEzkZ.js";import"./constants-BUPVgVv0.js";import"./FullscreenImage-CWmv4RdM.js";import"./Xmark-D3GY4RdU.js";import"./transition-BeYgsxae.js";import"./EventBroker-DGw12ejD.js";import"./Button-BOTo_vnh.js";import"./ReactPlayer-rvzkirXH.js";import"./index-BfSn4AB6.js";import"./common-CgL19bot.js";import"./useMount-w0UTrzOJ.js";import"./Slider-eqEqn_yk.js";import"./_baseIteratee-BCRPcNqj.js";import"./keys-jJBZWZU8.js";import"./_baseKeys-56rcbgE7.js";import"./_getTag-DJOW6XGd.js";import"./Title-DsV9aGrn.js";import"./HTML-MftywlNl.js";import"./ToggleArrow-D6UlE_UE.js";import"./svg-CQ-OHbUx.js";import"./Link-CbaIDZOS.js";import"./BackLink-DgtqTrCX.js";import"./FileLink-BWQKLgPk.js";import"./Label-CfhEzvjS.js";import"./Col-0RQE722I.js";import"./StylesContext-EtYCCqPX.js";import"./BackgroundImage-Zw7f6c2E.js";import"./utils-COU2-ufE.js";import"./Link-DQRM0QDi.js";import"./Content-dfXyuJ-U.js";import"./Links-CmUjNCdr.js";import"./ContentList-U84vkI2B.js";import"./theme-BLC-jXHQ.js";import"./Buttons-Xyt4_3dt.js";import"./Button-C3jGvM7S.js";import"./Row-KwziIsoj.js";import"./BalancedMasonry-BrE3UbtC.js";import"./FullWidthBackground-C44t_uob.js";import"./PriceDetailed-BE3XhmXJ.js";import"./toInteger-Ce-oQOWN.js";import"./CardBase-DlpbOHSo.js";import"./RouterLink-CURTKoH_.js";import"./Grid-BfIR3ay0.js";import"./Table-U8AZCCB9.js";import"./HeaderBreadcrumbs-GN1yY4VU.js";import"./CardLayout-DH8lk_JZ.js";import"./Map-CdPqTJPm.js";import"./ErrorWrapper-DkV2kPMJ.js";import"./YandexForm-BkQZsXLU.js";import"./index-Ce9SorwP.js";import"./AttachmentCard-Da1gCAor.js";import"./Tag-BuvhJi8A.js";import"./EmptyPlug-DVz3bYym.js";import"./sub-blocks-BnRb4tSo.js";import"./BasicCard-CsPhC91O.js";import"./IconWrapper-CO1yvQ6w.js";import"./Paginator-DZJcV3T6.js";import"./CaseStudyCard-CIv5PSTB.js";import"./ServiceIcon-CCDl-nc7.js";import"./ReportItem-kofRwt5g.js";import"./ReportFile-CHVr4M4j.js";import"./ReportSection-DP6QTLQW.js";import"./Divider-pATYTC6c.js";import"./MediaCard-EHmcXQfI.js";import"./LayoutItem-B6vUzAHR.js";import"./MetaInfo-B0pnLy4H.js";import"./BackgroundCard-BHKAdMMR.js";import"./Quote-3Erf717A.js";import"./Author-DNHG7Fbl.js";import"./PriceCard-DX-1GnMe.js";import"./ImageCard-DG00_I3F.js";import"./Card-_0e9FIZg.js";import"./ServiceLabel-DWsFf1WN.js";import"./EventPersonCard-CPsxF1PM.js";import"./OverflowScroller-UkelMzCt.js";import"./Control-DVzyRNWc.js";import"./BlockBase-DmJUnyDC.js";function r(o){const i={a:"a",code:"code",h2:"h2",h5:"h5",li:"li",p:"p",ul:"ul",...t(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{of:d}),`
`,e.jsxs(n,{children:[e.jsxs(i.h5,{id:"slider-new-block-based-on-swiper-library",children:["Slider new block. based on ",e.jsx(i.a,{href:"https://v6.swiperjs.com/react",rel:"nofollow",children:"swiper"})," library."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx(i.h2,{id:"parameters",children:"Parameters"}),e.jsxs(i.p,{children:["The slider supports two types of content: loadable and from a config. Loadable content is loaded via the ",e.jsx(i.code,{children:"loadable"})," property and content from a config via the ",e.jsx(i.code,{children:"children"})," property."]}),e.jsx(i.p,{children:e.jsx(i.code,{children:'type: "slider-new-block"'})}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"animated?: bool"})," — Enables/disables animation for the block (enabled by default)."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"dots?: bool"})," — A flag that indicates whether to show navigation dots."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrows? bool"})," — A flag that indicates whether to show navigation arrows."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"title: Title"})," — Title."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"description?: string"})," — Description."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"randomOrder?: bool"})," — Enables a random slide order."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"slidesToShow?: Record<'all' | 'sm' | 'md' | 'lg' | 'xl', number> | number"})," — How many slides to show on screens of different width. Overrides the default values. They can be overridden for each screen width. You can also set a single numeric value so that the number of slides is always the same (except for mobiles, where the value is always 1)."]}),e.jsx(i.p,{children:"Default values:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"xl"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"lg"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"md"}),": 2"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"sm"}),": 1"]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"type?: string"})," — Currently supported: ",e.jsx(i.code,{children:'"media-card" | "header-card"'}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"autoplay?: number"})," — Autoplay delay between transitions in ms."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"infinite? bool"})," — A flag that indicating whether to use infinite scrolling."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrowSize?: number"})," - Size of arrow icons. Default: ",e.jsx(i.code,{children:"16"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"adaptive?: boolean"})," - Adapt slider height to the height of the active slide. Default: ",e.jsx(i.code,{children:"false"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"loadable: Loadable"})," — Loadable content, the following data sources are currently supported:"]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"events"})," — Events."]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"blog"})," — Blog posts."]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"children: (Block | Card)[]"})," — You can add child blocks to the slider that will be displayed as its cards. You can also add a component with nested child blocks to the slider. To make each nested child block displayed in a separate card, a child must have the items field which is the nested child."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"onSlideChange | onSlideChangeTransitionStart | onSlideChangeTransitionEnd | onActiveIndexChange | onBreakpoint"})," ",e.jsx(i.a,{href:"https://v6.swiperjs.com/swiper-api#events",rel:"nofollow",children:"events"})," supported. If you need more please open an ",e.jsx(i.a,{href:"https://github.com/gravity-ui/page-constructor/issues",rel:"nofollow",children:"issue"})," or make PR."]})]})]})}function si(o={}){const{wrapper:i}={...t(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(r,{...o})}):r(o)}export{si as default};
