import{j as e,M as s}from"./iframe-XLyRJgkP.js";import{useMDXComponents as t}from"./index-CLniSMf5.js";import{S as n}from"./StoryTemplate-HwHdZ6ll.js";import{S as d}from"./Slider.stories-DSDqp_bG.js";import"./preload-helper-D6kgxu3v.js";import"./PageConstructor-MyFEu9fQ.js";import"./BackgroundMedia-Dl-dRDEf.js";import"./AnimateBlock-C_fe1jua.js";import"./inheritsLoose-B6TuBNuE.js";import"./Media-DQbQ3ld4.js";import"./index-BBdEgalB.js";import"./cjs-Cz8BQk8L.js";import"./url-C9s-sito.js";import"./VideoBlock-DWWRFa47.js";import"./debounce-DbNSN1P6.js";import"./isSymbol-upGJbxWb.js";import"./useAnalytics-alhPC80O.js";import"./Image-B4l8Yeq-.js";import"./constants-D1qj5IDx.js";import"./blocks-8By6GsD4.js";import"./toString-BXzLcrek.js";import"./addComponentKeysets--rvgUgX0.js";import"./v4-Dv1xt2bl.js";import"./url-CTB2nees.js";import"./PlayFill-Bl2ryH0q.js";import"./useUniqId-CLisWRz0.js";import"./common-DbSVTKYO.js";import"./Icon-D4oQJ36H.js";import"./useActionHandlers-Cmmwa0yP.js";import"./constants-BUPVgVv0.js";import"./FullscreenImage-CCIPL8jd.js";import"./Xmark-N2fWSJMc.js";import"./transition-Bje7ZQaK.js";import"./EventBroker-DNZhNMXM.js";import"./Button-BgrVJPRE.js";import"./ReactPlayer-Pp-l2kDs.js";import"./index-WYCyfx1p.js";import"./common-CgL19bot.js";import"./useMount-By9IC1mY.js";import"./Slider-qFuTqXv6.js";import"./_baseIteratee-BS8ajje_.js";import"./keys-BW0yHGXK.js";import"./_baseKeys-CO4BYajA.js";import"./_getTag-DFpRCQ5t.js";import"./Title-1JcUuwgv.js";import"./HTML-DomFljV1.js";import"./ToggleArrow-ByRGXWfB.js";import"./svg-CQ-OHbUx.js";import"./Link-C6yyXmDT.js";import"./BackLink-D-P9H4Kq.js";import"./FileLink-DgT0nnu1.js";import"./Label-DHxiLINX.js";import"./Col-DYjTOG8t.js";import"./StylesContext-BgnV1Am4.js";import"./BackgroundImage-Bd08TvVN.js";import"./utils-COU2-ufE.js";import"./Link-BZgSVdY2.js";import"./Content-QLfm1nIm.js";import"./Links-SEEqvYXs.js";import"./ContentList-BjcMHoFE.js";import"./theme-DE6Qsxvf.js";import"./Buttons-DEJr8Rtx.js";import"./Button-kZhj7KeX.js";import"./Row-DCodBsUk.js";import"./BalancedMasonry-meK1hOLq.js";import"./FullWidthBackground-CMzS1bbf.js";import"./PriceDetailed-DDGyIBG5.js";import"./toInteger-BshplkdD.js";import"./CardBase-CT2m85ww.js";import"./RouterLink-C9a3JWjq.js";import"./Grid-B0v5mvP7.js";import"./Table-BvmxDTmr.js";import"./HeaderBreadcrumbs-V_UXzuNe.js";import"./CardLayout-CSD6-Scv.js";import"./Map-Dq9EDGsg.js";import"./ErrorWrapper-BCJO0oIG.js";import"./YandexForm-Bxc1kV1R.js";import"./index-DtHx2RU4.js";import"./AttachmentCard-xTdzTTrG.js";import"./Tag-Cc9whUmK.js";import"./EmptyPlug-DZqaMXEE.js";import"./sub-blocks-BnRb4tSo.js";import"./BasicCard-Dh3sdrVz.js";import"./IconWrapper-Cpw6XsGK.js";import"./Paginator-CG_QZbf1.js";import"./CaseStudyCard-C-0rzm7n.js";import"./ServiceIcon-DdsJDvgI.js";import"./ReportItem-BP6I4YZ6.js";import"./ReportFile-Bo0TXrFK.js";import"./ReportSection-BgeolMal.js";import"./Divider-BZilxRsX.js";import"./MediaCard-BHt_AMqe.js";import"./LayoutItem-Dbgb6Lb3.js";import"./MetaInfo-DaKEsRlV.js";import"./BackgroundCard-Cqg50mt8.js";import"./Quote-Bof882RC.js";import"./Author-B7MPjjun.js";import"./PriceCard-DqclVvxe.js";import"./ImageCard-C3WwUwDh.js";import"./Card-CGFUJsSE.js";import"./ServiceLabel-Db1pLtkn.js";import"./EventPersonCard-Ch6HJ3Oc.js";import"./OverflowScroller-naS5svni.js";import"./Control-BzRPXGdv.js";import"./BlockBase-31GF-ZsT.js";function r(o){const i={a:"a",code:"code",h2:"h2",h5:"h5",li:"li",p:"p",ul:"ul",...t(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{of:d}),`
`,e.jsxs(n,{children:[e.jsxs(i.h5,{id:"slider-new-block-based-on-swiper-library",children:["Slider new block. based on ",e.jsx(i.a,{href:"https://v6.swiperjs.com/react",rel:"nofollow",children:"swiper"})," library."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx(i.h2,{id:"parameters",children:"Parameters"}),e.jsxs(i.p,{children:["The slider supports two types of content: loadable and from a config. Loadable content is loaded via the ",e.jsx(i.code,{children:"loadable"})," property and content from a config via the ",e.jsx(i.code,{children:"children"})," property."]}),e.jsx(i.p,{children:e.jsx(i.code,{children:'type: "slider-new-block"'})}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"animated?: bool"})," — Enables/disables animation for the block (enabled by default)."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"dots?: bool"})," — A flag that indicates whether to show navigation dots."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrows? bool"})," — A flag that indicates whether to show navigation arrows."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"title: Title"})," — Title."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"description?: string"})," — Description."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"randomOrder?: bool"})," — Enables a random slide order."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"slidesToShow?: Record<'all' | 'sm' | 'md' | 'lg' | 'xl', number> | number"})," — How many slides to show on screens of different width. Overrides the default values. They can be overridden for each screen width. You can also set a single numeric value so that the number of slides is always the same (except for mobiles, where the value is always 1)."]}),e.jsx(i.p,{children:"Default values:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"xl"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"lg"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"md"}),": 2"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"sm"}),": 1"]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"type?: string"})," — Currently supported: ",e.jsx(i.code,{children:'"media-card" | "header-card"'}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"autoplay?: number"})," — Autoplay delay between transitions in ms."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"infinite? bool"})," — A flag that indicating whether to use infinite scrolling."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrowSize?: number"})," - Size of arrow icons. Default: ",e.jsx(i.code,{children:"16"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"adaptive?: boolean"})," - Adapt slider height to the height of the active slide. Default: ",e.jsx(i.code,{children:"false"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"loadable: Loadable"})," — Loadable content, the following data sources are currently supported:"]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"events"})," — Events."]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"blog"})," — Blog posts."]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"children: (Block | Card)[]"})," — You can add child blocks to the slider that will be displayed as its cards. You can also add a component with nested child blocks to the slider. To make each nested child block displayed in a separate card, a child must have the items field which is the nested child."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"onSlideChange | onSlideChangeTransitionStart | onSlideChangeTransitionEnd | onActiveIndexChange | onBreakpoint"})," ",e.jsx(i.a,{href:"https://v6.swiperjs.com/swiper-api#events",rel:"nofollow",children:"events"})," supported. If you need more please open an ",e.jsx(i.a,{href:"https://github.com/gravity-ui/page-constructor/issues",rel:"nofollow",children:"issue"})," or make PR."]})]})]})}function si(o={}){const{wrapper:i}={...t(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(r,{...o})}):r(o)}export{si as default};
