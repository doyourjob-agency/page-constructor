import{j as e,M as s}from"./iframe-C8-gMF3W.js";import{useMDXComponents as t}from"./index-CQs3LRch.js";import{S as n}from"./StoryTemplate-5Aezq_gl.js";import{S as d}from"./Slider.stories-BjuUovsC.js";import"./preload-helper-D6kgxu3v.js";import"./PageConstructor-BqzbNHQE.js";import"./BackgroundMedia-CtzWAtn7.js";import"./AnimateBlock-2LZUeem5.js";import"./inheritsLoose-B6TuBNuE.js";import"./Media-abfs0vr4.js";import"./index-CcVhswei.js";import"./cjs-Cz8BQk8L.js";import"./url-P9tjjGqP.js";import"./VideoBlock-BYJtXgwK.js";import"./debounce-BYGtwgm6.js";import"./isSymbol-Ca9uF17j.js";import"./useAnalytics-z2FcT6ds.js";import"./Image-CXfB-woy.js";import"./constants-D1qj5IDx.js";import"./blocks-B6-VMZmc.js";import"./toString-B2tAvCY-.js";import"./addComponentKeysets-DOr-5WIn.js";import"./v4-Dv1xt2bl.js";import"./url-Tof0OiGn.js";import"./PlayFill-D3Z-kSit.js";import"./useUniqId-DrVW45Zz.js";import"./common-Dr22fxdG.js";import"./Icon-C7G1yzO_.js";import"./useActionHandlers-DmtmXBiM.js";import"./constants-BUPVgVv0.js";import"./FullscreenImage-CgCgHoL-.js";import"./Xmark-S-M6yDoP.js";import"./transition-wFdZ68go.js";import"./EventBroker-CC38NPcm.js";import"./Button-Di8ti2Bi.js";import"./ReactPlayer-CO0NQ_5N.js";import"./index-DLcAZ9NG.js";import"./common-CgL19bot.js";import"./useMount-DsN5Clwk.js";import"./Slider-FcjInEkj.js";import"./_baseIteratee-DM5MeCLr.js";import"./keys-kKhvbW40.js";import"./_baseKeys-zH3oV_mk.js";import"./_getTag-BAHR6966.js";import"./Title-BnC8tkvB.js";import"./HTML-DSAZMDt4.js";import"./ToggleArrow-AweN1uwF.js";import"./svg-CQ-OHbUx.js";import"./Link-DuCQAVqj.js";import"./BackLink-CE_dcnbc.js";import"./FileLink-DYrNLH-4.js";import"./Label-HUjO_8VK.js";import"./Col-C3c8avQp.js";import"./StylesContext-kHEuud8W.js";import"./BackgroundImage-DN24ATTq.js";import"./utils-COU2-ufE.js";import"./Link-CwUV_xAi.js";import"./Content-XSxxeT80.js";import"./Links-BYprIlPK.js";import"./ContentList-Vy9mYqqG.js";import"./theme-FSP3adSQ.js";import"./Buttons-DY1LRGDs.js";import"./Button-CwX7ZVds.js";import"./Row-vWBxJ4Za.js";import"./BalancedMasonry-CrLMHcaP.js";import"./FullWidthBackground-C9neP-4P.js";import"./PriceDetailed-air0HQIS.js";import"./toInteger-Bd3iIQku.js";import"./CardBase-MYOtGpvu.js";import"./RouterLink-DviSw5zl.js";import"./Grid-BGh7oepV.js";import"./Table-BxdmuQmk.js";import"./HeaderBreadcrumbs-CPjdS-8B.js";import"./CardLayout-CH8z7o-f.js";import"./Map-DBaFlO7F.js";import"./ErrorWrapper-D0Cdag9M.js";import"./YandexForm-BFezRjhj.js";import"./index-C_Roxn16.js";import"./AttachmentCard-DE4sbJcu.js";import"./Tag-B7S415GV.js";import"./EmptyPlug-D_WwWszb.js";import"./sub-blocks-BnRb4tSo.js";import"./BasicCard-CpCwrROL.js";import"./IconWrapper-CCiVFEgN.js";import"./Paginator-BmssYo-F.js";import"./CaseStudyCard-C4byseMf.js";import"./ServiceIcon-Cqi-tEEC.js";import"./ReportItem-LqPuqQVo.js";import"./ReportFile-DMPhTjcZ.js";import"./ReportSection-CDpYBbue.js";import"./Divider-DTMn37sw.js";import"./MediaCard-CVqWbg5C.js";import"./LayoutItem-B62yuCW8.js";import"./MetaInfo-DQ0XmzNq.js";import"./BackgroundCard-OaL_p9Nt.js";import"./Quote-qPi_HEPF.js";import"./Author-C-gmkzBJ.js";import"./PriceCard-DwwFnIEM.js";import"./ImageCard-DQGlexQt.js";import"./Card-DkNjQiI9.js";import"./ServiceLabel-B7FYtvPs.js";import"./EventPersonCard-CO1RI2ad.js";import"./OverflowScroller-DXi3XXHR.js";import"./Control-Khdm2PSf.js";import"./BlockBase-1xRfo1wh.js";function r(o){const i={a:"a",code:"code",h2:"h2",h5:"h5",li:"li",p:"p",ul:"ul",...t(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{of:d}),`
`,e.jsxs(n,{children:[e.jsxs(i.h5,{id:"slider-new-block-based-on-swiper-library",children:["Slider new block. based on ",e.jsx(i.a,{href:"https://v6.swiperjs.com/react",rel:"nofollow",children:"swiper"})," library."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx(i.h2,{id:"parameters",children:"Parameters"}),e.jsxs(i.p,{children:["The slider supports two types of content: loadable and from a config. Loadable content is loaded via the ",e.jsx(i.code,{children:"loadable"})," property and content from a config via the ",e.jsx(i.code,{children:"children"})," property."]}),e.jsx(i.p,{children:e.jsx(i.code,{children:'type: "slider-new-block"'})}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"animated?: bool"})," — Enables/disables animation for the block (enabled by default)."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"dots?: bool"})," — A flag that indicates whether to show navigation dots."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrows? bool"})," — A flag that indicates whether to show navigation arrows."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"title: Title"})," — Title."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"description?: string"})," — Description."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"randomOrder?: bool"})," — Enables a random slide order."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"slidesToShow?: Record<'all' | 'sm' | 'md' | 'lg' | 'xl', number> | number"})," — How many slides to show on screens of different width. Overrides the default values. They can be overridden for each screen width. You can also set a single numeric value so that the number of slides is always the same (except for mobiles, where the value is always 1)."]}),e.jsx(i.p,{children:"Default values:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"xl"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"lg"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"md"}),": 2"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"sm"}),": 1"]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"type?: string"})," — Currently supported: ",e.jsx(i.code,{children:'"media-card" | "header-card"'}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"autoplay?: number"})," — Autoplay delay between transitions in ms."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"infinite? bool"})," — A flag that indicating whether to use infinite scrolling."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrowSize?: number"})," - Size of arrow icons. Default: ",e.jsx(i.code,{children:"16"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"adaptive?: boolean"})," - Adapt slider height to the height of the active slide. Default: ",e.jsx(i.code,{children:"false"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"loadable: Loadable"})," — Loadable content, the following data sources are currently supported:"]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"events"})," — Events."]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"blog"})," — Blog posts."]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"children: (Block | Card)[]"})," — You can add child blocks to the slider that will be displayed as its cards. You can also add a component with nested child blocks to the slider. To make each nested child block displayed in a separate card, a child must have the items field which is the nested child."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"onSlideChange | onSlideChangeTransitionStart | onSlideChangeTransitionEnd | onActiveIndexChange | onBreakpoint"})," ",e.jsx(i.a,{href:"https://v6.swiperjs.com/swiper-api#events",rel:"nofollow",children:"events"})," supported. If you need more please open an ",e.jsx(i.a,{href:"https://github.com/gravity-ui/page-constructor/issues",rel:"nofollow",children:"issue"})," or make PR."]})]})]})}function si(o={}){const{wrapper:i}={...t(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(r,{...o})}):r(o)}export{si as default};
