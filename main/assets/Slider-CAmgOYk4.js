import{j as e,M as s}from"./iframe-CTiQLnPf.js";import{useMDXComponents as t}from"./index-Ci1LGq9X.js";import{S as n}from"./StoryTemplate-DZLZEju4.js";import{S as d}from"./Slider.stories-lAKvLv06.js";import"./preload-helper-D6kgxu3v.js";import"./PageConstructor-CvXmxey8.js";import"./BackgroundMedia-CN0DzNGw.js";import"./AnimateBlock-sar8tMjd.js";import"./inheritsLoose-B6TuBNuE.js";import"./Media-C3qBTng4.js";import"./index-ZK7LysM1.js";import"./cjs-Cz8BQk8L.js";import"./url-XIHZhn4K.js";import"./VideoBlock-GtZ8pcTe.js";import"./debounce-CbMNE1Iu.js";import"./isSymbol-CTbONu96.js";import"./useAnalytics-DhAQF0_-.js";import"./Image-CLeSth57.js";import"./constants-D1qj5IDx.js";import"./blocks-vpsbpmcg.js";import"./toString-CljDmBMQ.js";import"./addComponentKeysets-Aw9IVa1Y.js";import"./v4-Dv1xt2bl.js";import"./url-BV-P2Ueb.js";import"./PlayFill-DeqZ-dIz.js";import"./useUniqId-DxLTbEGY.js";import"./common-CxQSwqWB.js";import"./Icon-L97WD3GK.js";import"./useActionHandlers-DEVhtDT1.js";import"./constants-BUPVgVv0.js";import"./FullscreenImage-CqMp3weM.js";import"./Xmark-Cy8wWy8r.js";import"./transition-QhvJcput.js";import"./EventBroker-BjVZBl6P.js";import"./Button-Bm66aJE6.js";import"./ReactPlayer-ttSN-ix_.js";import"./index-BQJyQf4g.js";import"./common-CgL19bot.js";import"./useMount-DokgfYll.js";import"./Slider-CtWqp7qm.js";import"./_baseIteratee-LaepUZ4U.js";import"./keys-I4AIsYLo.js";import"./_baseKeys-BtI3Z09k.js";import"./_getTag-Q6LpC9e6.js";import"./Title-AEVBf4BX.js";import"./HTML-C8lRtZTW.js";import"./ToggleArrow-BE1TnfU3.js";import"./svg-CQ-OHbUx.js";import"./Link-B53tpvj0.js";import"./BackLink-BI_NOgsy.js";import"./FileLink-DJ54qFL-.js";import"./Label-BCwLadCv.js";import"./Col-Dq5jEbcN.js";import"./StylesContext-B8QLVYrS.js";import"./BackgroundImage-B72rTsUe.js";import"./utils-COU2-ufE.js";import"./Link-BaDdHppd.js";import"./Content-DU49VWMj.js";import"./Links-5hE13ktH.js";import"./ContentList-98Pl1fB5.js";import"./theme-C-Pr0IM1.js";import"./Buttons-4a3rS21u.js";import"./Button-XdpSBjBN.js";import"./Row-Bz8Cb7S6.js";import"./BalancedMasonry-8RS3Llg2.js";import"./FullWidthBackground-BIm1z6Dx.js";import"./PriceDetailed-CW3maNUy.js";import"./toInteger-BWp9yO2t.js";import"./CardBase-DsKtaBEE.js";import"./RouterLink-Ba3nkuc-.js";import"./Grid-Mh2F4RuT.js";import"./Table-DdKk4Lun.js";import"./HeaderBreadcrumbs-D6PcoriW.js";import"./CardLayout-CBPS49Vs.js";import"./Map-DZSrpx1s.js";import"./ErrorWrapper-DGM-qfmK.js";import"./YandexForm-ByZoCXWy.js";import"./index-BOtH-hZO.js";import"./AttachmentCard-DpT1pteZ.js";import"./Tag-CoT9enmz.js";import"./EmptyPlug-ChojVSXN.js";import"./sub-blocks-BnRb4tSo.js";import"./BasicCard-BQdkBWog.js";import"./IconWrapper-Bxq3SJWu.js";import"./Paginator-OeMTUlDk.js";import"./CaseStudyCard-CacIHhwz.js";import"./ServiceIcon-DYPketIm.js";import"./ReportItem-qiiR61Ic.js";import"./ReportFile-DqoajlTO.js";import"./ReportSection-Bc1mQZBq.js";import"./Divider-DSGbPgql.js";import"./MediaCard-CWiYqLnN.js";import"./LayoutItem-7NNeaioF.js";import"./MetaInfo-B2TR6sUL.js";import"./BackgroundCard-DsfXzVZo.js";import"./Quote-DAjIpjzP.js";import"./Author-BeNEhKTG.js";import"./PriceCard-D4gJ-gHQ.js";import"./ImageCard-CAz162y-.js";import"./Card-Cu9VreI1.js";import"./ServiceLabel-BOUmiNNS.js";import"./EventPersonCard-omWQA4dA.js";import"./OverflowScroller-CvUX5VGF.js";import"./Control-BHHKY5qZ.js";import"./BlockBase-ov_6oHn9.js";function r(o){const i={a:"a",code:"code",h2:"h2",h5:"h5",li:"li",p:"p",ul:"ul",...t(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{of:d}),`
`,e.jsxs(n,{children:[e.jsxs(i.h5,{id:"slider-new-block-based-on-swiper-library",children:["Slider new block. based on ",e.jsx(i.a,{href:"https://v6.swiperjs.com/react",rel:"nofollow",children:"swiper"})," library."]}),e.jsx("br",{}),e.jsx("br",{}),e.jsx(i.h2,{id:"parameters",children:"Parameters"}),e.jsxs(i.p,{children:["The slider supports two types of content: loadable and from a config. Loadable content is loaded via the ",e.jsx(i.code,{children:"loadable"})," property and content from a config via the ",e.jsx(i.code,{children:"children"})," property."]}),e.jsx(i.p,{children:e.jsx(i.code,{children:'type: "slider-new-block"'})}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"animated?: bool"})," — Enables/disables animation for the block (enabled by default)."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"dots?: bool"})," — A flag that indicates whether to show navigation dots."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrows? bool"})," — A flag that indicates whether to show navigation arrows."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"title: Title"})," — Title."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"description?: string"})," — Description."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"randomOrder?: bool"})," — Enables a random slide order."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"slidesToShow?: Record<'all' | 'sm' | 'md' | 'lg' | 'xl', number> | number"})," — How many slides to show on screens of different width. Overrides the default values. They can be overridden for each screen width. You can also set a single numeric value so that the number of slides is always the same (except for mobiles, where the value is always 1)."]}),e.jsx(i.p,{children:"Default values:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"xl"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"lg"}),": 3"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"md"}),": 2"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"sm"}),": 1"]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"type?: string"})," — Currently supported: ",e.jsx(i.code,{children:'"media-card" | "header-card"'}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"autoplay?: number"})," — Autoplay delay between transitions in ms."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"infinite? bool"})," — A flag that indicating whether to use infinite scrolling."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"arrowSize?: number"})," - Size of arrow icons. Default: ",e.jsx(i.code,{children:"16"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"adaptive?: boolean"})," - Adapt slider height to the height of the active slide. Default: ",e.jsx(i.code,{children:"false"}),"."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"loadable: Loadable"})," — Loadable content, the following data sources are currently supported:"]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"events"})," — Events."]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.code,{children:"blog"})," — Blog posts."]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"children: (Block | Card)[]"})," — You can add child blocks to the slider that will be displayed as its cards. You can also add a component with nested child blocks to the slider. To make each nested child block displayed in a separate card, a child must have the items field which is the nested child."]}),e.jsxs(i.p,{children:[e.jsx(i.code,{children:"onSlideChange | onSlideChangeTransitionStart | onSlideChangeTransitionEnd | onActiveIndexChange | onBreakpoint"})," ",e.jsx(i.a,{href:"https://v6.swiperjs.com/swiper-api#events",rel:"nofollow",children:"events"})," supported. If you need more please open an ",e.jsx(i.a,{href:"https://github.com/gravity-ui/page-constructor/issues",rel:"nofollow",children:"issue"})," or make PR."]})]})]})}function si(o={}){const{wrapper:i}={...t(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(r,{...o})}):r(o)}export{si as default};
