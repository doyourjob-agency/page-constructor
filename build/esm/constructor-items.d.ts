export declare const blockMap: {
    "slider-block": (props: import("react").PropsWithChildren<import("./blocks/Slider/Slider").SliderProps>) => JSX.Element;
    "extended-features-block": ({ title, description, items, colSizes, animated, }: import("./models").ExtendedFeaturesProps) => JSX.Element;
    "promo-features-block": (props: import("./models").PromoFeaturesProps) => JSX.Element;
    "questions-block": (props: import("./models").QuestionsProps) => JSX.Element;
    "banner-block": (props: import("./models").BannerBlockProps) => JSX.Element;
    "companies-block": ({ title, description, images, animated }: import("./models").CompaniesBlockProps) => JSX.Element;
    "media-block": (props: import("./models").MediaBlockProps) => JSX.Element;
    "info-block": (props: import("./models").InfoBlockProps) => JSX.Element;
    "table-block": (props: import("./models").TableBlockProps) => JSX.Element;
    "tabs-block": ({ items, title, description, animated, tabsColSizes, centered, direction, contentSize, }: import("./models").TabsBlockProps) => JSX.Element;
    "header-block": (props: import("react").PropsWithChildren<import("./models").HeaderBlockProps & import("./models").ClassNameProps>) => JSX.Element;
    "icons-block": ({ title, description, size, colSizes, items }: import("./models").IconsBlockProps) => JSX.Element;
    "header-slider-block": ({ items, arrows, ...props }: import("./models").HeaderSliderBlockProps) => JSX.Element;
    "card-layout-block": import("react").FC<import("./blocks/CardLayout/CardLayout").CardLayoutBlockProps>;
    "content-layout-block": (props: import("./models").ContentLayoutBlockProps) => JSX.Element;
    "share-block": ({ items, title }: import("./models").ShareBlockProps) => JSX.Element;
    "map-block": ({ map, border, disableShadow, ...props }: import("./models").MapBlockProps) => JSX.Element;
    "filter-block": import("react").FC<import("./models").FilterBlockProps>;
    "form-block": import("react").FC<import("./models").FormBlockProps>;
    "marquee-links-block": ({ title, description, textAlign, speed, items, }: import("./models").MarqueeLinksBlockProps) => JSX.Element | null;
    "solutions-block": () => JSX.Element;
    "events-feed-block": ({ image, title }: import("./models").EventsFeedBlockProps) => JSX.Element;
    "blog-feed-block": ({ image, title }: import("./models").BlogFeedBlockProps) => JSX.Element;
    "press-releases-block": ({ title }: import("./models").PressReleasesBlockProps) => JSX.Element;
    "link-table-block": ({ title, items }: import("./models").LinkTableBlockProps) => JSX.Element;
    "services-block": ({ title, serviceLinkType }: import("./models").ServicesBlockProps) => JSX.Element;
    "quotes-block": ({ theme: localTheme, items, background, backgroundColor, }: import("./models").QuotesBlockProps) => JSX.Element;
    "slider-new-block": ({ animated, title, description, type, anchorId, arrows, adaptive, autoplay: autoplayMs, dots, className, dotsClassName, disclaimer, children, blockClassName, arrowSize, slidesToShow, onSlideChange, onSlideChangeTransitionStart, onSlideChangeTransitionEnd, onActiveIndexChange, onBreakpoint, }: import("react").PropsWithChildren<import("./blocks/SliderNew/Slider").SliderNewProps>) => JSX.Element;
};
export declare const subBlockMap: {
    divider: ({ size, border }: import("./models").DividerProps) => JSX.Element;
    "price-detailed": (props: import("./models").PriceDetailedProps) => JSX.Element;
    "media-card": ({ border, analyticsEvents, ...mediaProps }: import("./models").MediaCardProps) => JSX.Element;
    "banner-card": (props: import("./models").BannerCardProps) => JSX.Element;
    "layout-item": ({ title, afterTitle, rightSpace, content: { links, ...content }, metaInfo, media, border, fullscreen, icon, className, analyticsEvents, controlPosition, }: import("./models").LayoutItemProps) => JSX.Element;
    "background-card": (props: import("./models").BackgroundCardProps) => JSX.Element;
    "basic-card": import("react").MemoExoticComponent<(props: import("./models").BasicCardProps) => JSX.Element>;
    content: (props: import("./sub-blocks/Content/Content").ContentProps) => JSX.Element;
    quote: (props: import("./models").QuoteProps) => JSX.Element;
    "price-card": (props: import("./models").PriceCardProps) => JSX.Element;
    "image-card": (props: import("./models").ImageCardProps) => JSX.Element;
    "content-layout-card": (props: import("./models").ContentLayoutBlockProps) => JSX.Element;
    card: ({ header, text, service, ...props }: import("./models").CardProps) => JSX.Element;
    "post-card": import("react").MemoExoticComponent<({ title, date, readingTime, image, description, tag, url, fullWidth, size, showTag, titleHeadingLevel, }: import("./models").PostCardProps) => JSX.Element>;
};
export declare const navItemMap: {
    button: import("react").FC<Pick<import("./navigation").NavigationItemProps, "className"> & import("./models").ButtonProps>;
    social: import("react").FC<import("./navigation/components/SocialIcon/SocialIcon").NavigationSocialItemOwnProps>;
    dropdown: ({ text, icon, className, iconSize, hidePopup, items, isActive, ...props }: import("./navigation").NavigationItemProps & import("./models").NavigationDropdownItem) => JSX.Element;
    link: import("react").FC<import("./navigation").NavigationItemProps & import("./models").NavigationLinkItem>;
    "github-button": ({ text, url, className, label, size, icon, urlTitle, }: import("./navigation").NavigationItemProps & import("./models").NavigationGithubButton) => JSX.Element;
};
