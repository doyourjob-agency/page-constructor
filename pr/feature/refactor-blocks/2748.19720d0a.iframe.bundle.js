"use strict";(self.webpackChunk_doyourjob_gravity_ui_page_constructor=self.webpackChunk_doyourjob_gravity_ui_page_constructor||[]).push([[2748],{"./src/components/VideoBlock/VideoBlock.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ZP:()=>components_VideoBlock_VideoBlock,Cr:()=>getHeight});var react=__webpack_require__("./node_modules/react/index.js"),PlayFill=__webpack_require__("./node_modules/@gravity-ui/icons/esm/PlayFill.js"),useUniqId=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/hooks/useUniqId/useUniqId.js"),useActionHandlers=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/hooks/useActionHandlers/useActionHandlers.js"),Icon=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/components/Icon/Icon.js"),debounce=__webpack_require__("./node_modules/lodash/debounce.js"),debounce_default=__webpack_require__.n(debounce),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),useAnalytics=__webpack_require__("./src/hooks/useAnalytics.ts"),common=__webpack_require__("./src/models/common.ts"),cn=__webpack_require__("./src/utils/cn.ts"),utils_url=__webpack_require__("./src/utils/url.ts"),Image=__webpack_require__("./src/components/Image/Image.tsx"),addComponentKeysets=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/components/utils/addComponentKeysets.js");const en_namespaceObject=JSON.parse('{"iframe-title":"Video frame"}'),ru_namespaceObject=JSON.parse('{"iframe-title":"Фрейм видеоблока"}'),i18n=(0,addComponentKeysets.e)({en:en_namespaceObject,ru:ru_namespaceObject},`${cn.A7}VideoBlock`);var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),VideoBlock=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/VideoBlock/VideoBlock.scss"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(VideoBlock.Z,options);VideoBlock.Z.locals;const RECORD_RE=/[0-9A-Za-z_-]{11}/,STREAM_RE=/[0-9A-Za-z_-]{23,25}/,AUTOPLAY_ATTRIBUTES={autoplay:1,mute:1},NO_AUTOPLAY_ATTRIBUTES={autoplay:0},b=(0,cn.Ge)("VideoBlock");function getHeight(width){return width/16*9}const VideoBlock_VideoBlock_VideoBlock=props=>{const{stream,record,videoIframe,attributes,className,id,previewImg,playButton,playButtonId,height,fullscreen,analyticsEvents,autoplay,onImageLoad}=props,handleAnalytics=(0,useAnalytics.z)(common.IZ.VideoPreview),src=videoIframe||function getYoutubeVideoSrc(stream,record){if(!stream&&!record)return null;const[videoLink,url,re]=stream?[stream,"https://www.youtube.com/embed/live_stream?channel=",STREAM_RE]:[record,"https://www.youtube.com/embed/",RECORD_RE],match=videoLink?.match(re);let src;return match&&match.length&&(src=url+match[0]),src}(stream,record),ref=(0,react.useRef)(null),[hidePreview,setHidePreview]=(0,react.useState)(!1),[currentHeight,setCurrentHeight]=(0,react.useState)(height||void 0),fullId=(0,react.useMemo)((()=>id||(0,v4.Z)()),[id]),buttonId=(0,useUniqId.u)(),[isPlaying,setIsPlaying]=(0,react.useState)(!previewImg),iframeSrc=(0,react.useMemo)((()=>{if(src&&isPlaying)try{const url=new URL(src);return(0,utils_url.Z2)({...attributes||{},...previewImg||autoplay?AUTOPLAY_ATTRIBUTES:NO_AUTOPLAY_ATTRIBUTES}).forEach(((value,key)=>{url.searchParams.set(key,value)})),url.href}catch(e){return src}}),[attributes,autoplay,isPlaying,previewImg,src]),onPreviewClick=(0,react.useCallback)((()=>{handleAnalytics(analyticsEvents),setIsPlaying(!0),setTimeout((()=>setHidePreview(!0)),300)}),[handleAnalytics,analyticsEvents]),{onKeyDown:onPreviewKeyDown}=(0,useActionHandlers.b)(onPreviewClick);(0,react.useEffect)((()=>{const updateSize=debounce_default()((()=>{setCurrentHeight(ref.current?Math.round(getHeight(ref.current.offsetWidth)):void 0)}),100);return updateSize(),window.addEventListener("resize",updateSize,{passive:!0}),()=>{window.removeEventListener("resize",updateSize)}}),[height]);const iframeContent=(0,react.useMemo)((()=>react.createElement("iframe",{id:fullId,src:iframeSrc,width:"100%",height:"100%",title:i18n("iframe-title"),frameBorder:"0",allowFullScreen:!0,allow:"autoplay; fullscreen; encrypted-media; accelerometer; gyroscope; picture-in-picture; clipboard-write; web-share; screen-wake-lock",loading:"lazy"})),[fullId,iframeSrc]);return(0,react.useEffect)((()=>{setHidePreview(!1)}),[src]),src?react.createElement("div",{className:b(null,className),style:{height:currentHeight},ref},iframeContent,previewImg&&!hidePreview&&!fullscreen&&react.createElement("div",{className:b("preview"),onClick:onPreviewClick,onKeyDown:onPreviewKeyDown,role:"button",tabIndex:0,"aria-labelledby":playButton?playButtonId:buttonId},react.createElement(Image.Z,{src:previewImg,className:b("image"),containerClassName:b("image-wrapper"),onLoad:onImageLoad}),playButton||react.createElement("button",{title:"Play",id:buttonId,className:b("button")},react.createElement(Icon.J,{className:b("icon"),data:PlayFill.Z,size:24})))):null},components_VideoBlock_VideoBlock=VideoBlock_VideoBlock_VideoBlock;VideoBlock_VideoBlock_VideoBlock.__docgenInfo={description:"",methods:[],displayName:"VideoBlock",props:{analyticsEvents:{required:!1,tsType:{name:"union",raw:"AnalyticsEvent | AnalyticsEvent[]",elements:[{name:"intersection",raw:"T & {\n    name: string;\n    type?: string;\n    counters?: AnalyticsCounters;\n    context?: string;\n    target?: string;\n}",elements:[{name:"T"},{name:"signature",type:"object",raw:"{\n    name: string;\n    type?: string;\n    counters?: AnalyticsCounters;\n    context?: string;\n    target?: string;\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"type",value:{name:"string",required:!1}},{key:"counters",value:{name:"signature",type:"object",raw:"{\n    include?: string[];\n    exclude?: string[];\n}",signature:{properties:[{key:"include",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"exclude",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]},required:!1}},{key:"context",value:{name:"string",required:!1}},{key:"target",value:{name:"string",required:!1}}]}}]},{name:"Array",elements:[{name:"intersection",raw:"T & {\n    name: string;\n    type?: string;\n    counters?: AnalyticsCounters;\n    context?: string;\n    target?: string;\n}",elements:[{name:"T"},{name:"signature",type:"object",raw:"{\n    name: string;\n    type?: string;\n    counters?: AnalyticsCounters;\n    context?: string;\n    target?: string;\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"type",value:{name:"string",required:!1}},{key:"counters",value:{name:"signature",type:"object",raw:"{\n    include?: string[];\n    exclude?: string[];\n}",signature:{properties:[{key:"include",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"exclude",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]},required:!1}},{key:"context",value:{name:"string",required:!1}},{key:"target",value:{name:"string",required:!1}}]}}]}],raw:"AnalyticsEvent[]"}]},description:""},id:{required:!1,tsType:{name:"string"},description:""},stream:{required:!1,tsType:{name:"string"},description:""},record:{required:!1,tsType:{name:"string"},description:""},videoIframe:{required:!1,tsType:{name:"string"},description:""},attributes:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:""},className:{required:!1,tsType:{name:"string"},description:""},previewImg:{required:!1,tsType:{name:"string"},description:""},playButton:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},playButtonId:{required:!1,tsType:{name:"string"},description:""},height:{required:!1,tsType:{name:"number"},description:""},fullscreen:{required:!1,tsType:{name:"boolean"},description:""},autoplay:{required:!1,tsType:{name:"boolean"},description:""},onImageLoad:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}}},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/VideoBlock/VideoBlock.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".pc-VideoBlock{position:relative}.pc-VideoBlock__preview{display:flex;justify-content:center;align-items:center;position:absolute;top:0;left:0;width:100%;height:100%}.pc-VideoBlock__image{width:100%;height:100%;object-fit:cover;display:block}.pc-VideoBlock__image-wrapper{height:100%;width:100%}.pc-VideoBlock__button{display:inline-block;margin:0;padding:0;font:inherit;border:none;outline:none;color:inherit;background:none;cursor:pointer;display:flex;justify-content:center;align-items:center;position:absolute;width:64px;height:64px;color:var(--g-color-base-background);background-color:var(--g-color-base-brand);border-radius:50%}.pc-VideoBlock__button:focus{outline:2px solid var(--g-color-line-focus);outline-offset:0}.pc-VideoBlock__button:focus:not(:focus-visible){outline:0}.pc-VideoBlock__icon{margin-left:1px}","",{version:3,sources:["webpack://./src/components/VideoBlock/VideoBlock.scss","webpack://./styles/mixins.scss"],names:[],mappings:"AAKA,eACI,iBAAA,CAEA,wBACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CAGJ,sBACI,UAAA,CACA,WAAA,CACA,gBAAA,CACA,aAAA,CAEA,8BACI,WAAA,CACA,UAAA,CAIR,uBCmCA,oBAAA,CACA,QAAA,CACA,SAAA,CACA,YAAA,CACA,WAAA,CACA,YAAA,CACA,aAAA,CACA,eAAA,CACA,cAAA,CDvCI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CAEA,oCAAA,CACA,0CAAA,CACA,iBAAA,CChCA,6BACI,2CAAA,CACA,gBAJc,CAMlB,iDACI,SAAA,CD8BR,qBACI,eAAA",sourcesContent:["@import '../../../styles/mixins';\n@import '../../../styles/variables';\n\n$block: '.#{$ns}VideoBlock';\n\n#{$block} {\n    position: relative;\n\n    &__preview {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n\n    &__image {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        display: block;\n\n        &-wrapper {\n            height: 100%;\n            width: 100%;\n        }\n    }\n\n    &__button {\n        @include reset-button-style();\n        @include focusable();\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: absolute;\n        width: 64px;\n        height: 64px;\n\n        color: var(--g-color-base-background);\n        background-color: var(--g-color-base-brand);\n        border-radius: 50%;\n    }\n\n    &__icon {\n        margin-left: 1px;\n    }\n}\n","@import '@gravity-ui/uikit/styles/mixins.scss';\n@import './variables.scss';\n\n//common\n\n@mixin text-size($name) {\n    font-size: var(--g-text-#{$name}-font-size, var(--pc-text-#{$name}-font-size));\n    line-height: var(--g-text-#{$name}-line-height, var(--pc-text-#{$name}-line-height));\n}\n\n@mixin focusable($offset: 0, $mode: 'outline') {\n    @if $mode == 'outline' {\n        &:focus {\n            outline: 2px solid var(--g-color-line-focus);\n            outline-offset: $offset;\n        }\n        &:focus:not(:focus-visible) {\n            outline: 0;\n        }\n    }\n    @if $mode == 'box-shadow' {\n        &:focus {\n            box-shadow: 0 0 0 2px var(--g-color-line-focus);\n        }\n        &:focus:not(:focus-visible) {\n            box-shadow: none;\n        }\n    }\n}\n\n@mixin link() {\n    @include islands-focus();\n\n    color: var(--g-color-text-link);\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n        color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin anchor($offset: 0px) {\n    display: block;\n    position: relative;\n    top: calc(-1 * var(--header-height) - #{$offset});\n    visibility: hidden;\n}\n\n@mixin mobile-scrollable($offset: $normalOffset) {\n    margin-left: -$offset;\n    padding-left: $offset;\n    padding-right: $offset;\n    width: calc(100% + #{$offset} * 2);\n    overflow-x: auto;\n\n    &::after {\n        content: '';\n        height: 1px;\n        padding-right: $offset;\n    }\n}\n\n@mixin reset-button-style() {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n    border: none;\n    outline: none;\n    color: inherit;\n    background: none;\n    cursor: pointer;\n}\n\n@mixin reset-link-style() {\n    color: inherit;\n    text-decoration: none;\n}\n\n@mixin reset-list-style() {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n@mixin islands-focus() {\n    outline: none;\n\n    .utilityfocus &:focus {\n        outline: 2px solid #ffdb4d;\n    }\n}\n\n@mixin shadow-hover($pseudo: before) {\n    position: relative;\n\n    &::#{$pseudo} {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n\n        border-radius: inherit;\n        box-shadow: var(--shadow-offset-x, 0) var(--shadow-offset-y, 0) var(--shadow-blur, 10px)\n            var(--shadow-spread, 0) var(--shadow-color, --pc-color-sfx-shadow);\n        opacity: var(--shadow-opacity, 0.4);\n        transition: opacity ease-in var(--shadow-transition-time, 0.15s);\n    }\n}\n\n@mixin up-hover($color: var(--pc-color-sfx-shadow)) {\n    @include shadow-hover(before);\n\n    --shadow-offset-y: 5px;\n    --shadow-blur: 12px;\n    --shadow-color: #{$color};\n    --shadow-opacity: 0;\n\n    &:hover {\n        --shadow-opacity: 1;\n    }\n\n    .mobile &::before {\n        box-shadow: none;\n    }\n}\n\n@mixin header-link() {\n    @include link;\n\n    --pc-text-header-color: var(--g-color-text-link);\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin icon($size: 32px) {\n    width: $size;\n    height: $size;\n    background-size: cover;\n}\n\n@mixin top-content-offset($offset) {\n    top: calc(var(--header-height) + #{$offset});\n}\n\n@mixin label($size: m) {\n    @if $size == m {\n        @include text-size(body-1);\n\n        $label-height: 20px;\n\n        display: inline-block;\n        padding: 0 8px;\n        border-radius: 2px;\n        height: $label-height;\n        line-height: $label-height;\n    }\n\n    @if $size == s {\n        @include text-size(caption-2);\n\n        $label-height: 16px;\n\n        padding: 0 $indent4XS;\n        height: $label-height;\n        line-height: $label-height;\n    }\n}\n\n//constructor\n\n@mixin block {\n    @include add-specificity(&) {\n        margin-top: $indentL;\n        padding: 0 0 $indentL;\n\n        &:first-child {\n            // @deprecated\n            margin-top: var(--pc-first-block-indent, #{$indentXXL});\n        }\n    }\n}\n\n@mixin add-theme() {\n    &_theme_dark {\n        color: var(--g-color-text-light-primary);\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        .yfm {\n            color: var(--g-color-text-light-primary);\n        }\n    }\n}\n\n@mixin justify() {\n    &_justify_center {\n        text-align: center;\n    }\n\n    &_justify_end {\n        text-align: right;\n    }\n}\n\n@mixin background() {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n}\n\n@mixin shadow() {\n    @extend %shadow-hover;\n}\n\n%shadow {\n    box-shadow: 0px 4px 24px var(--pc-color-sfx-shadow), 0px 2px 8px var(--pc-color-sfx-shadow);\n}\n\n%shadow-hover {\n    @extend %shadow;\n\n    &:hover {\n        box-shadow: 0px 4px 24px var(--g-color-sfx-shadow), 0px 2px 8px var(--g-color-sfx-shadow);\n        cursor: pointer;\n    }\n}\n\n@mixin card-hover() {\n    transition: transform 0.3s ease-out;\n    &:hover {\n        transform: translateY(-8px);\n    }\n}\n\n@mixin image-shadow() {\n    box-shadow: 0 2px 8px var(--pc-color-sfx-shadow), 0 4px 24px var(--pc-color-sfx-shadow);\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n}\n\n@mixin card-border($hover: false) {\n    &_border_line {\n        border: 1px solid var(--g-color-line-generic);\n    }\n\n    &_border_line,\n    &_border_none {\n        @if $hover {\n            @include card-hover();\n        }\n    }\n\n    &_border_shadow {\n        @extend %shadow;\n        @if $hover {\n            @include card-hover();\n            &:hover {\n                background-color: var(--pc-color-base-float-hover);\n            }\n        }\n    }\n}\n\n@mixin card($hover: false) {\n    min-height: 248px;\n    height: 100%;\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n    background-color: var(--g-color-base-float);\n\n    transition: box-shadow 0.3s $ease-out-cubic;\n    @include card-border($hover);\n}\n\n@mixin card-image {\n    margin: $imagePadding;\n    border-radius: calc(#{$borderRadius} - #{$imagePadding});\n}\n\n@mixin reset-link-hover {\n    &:hover,\n    &:active {\n        --pc-text-header-color: inherit;\n        color: inherit;\n    }\n}\n\n@mixin animate-wrap {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        &.#{$ns}AnimateBlock,\n        .#{$ns}AnimateBlock & {\n            @content;\n        }\n    }\n}\n\n@mixin animate($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            top: 0;\n            opacity: 1;\n            transition: top $transition, opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-fade($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            opacity: 1;\n            transition: opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-slides($item-class, $delay: 0s) {\n    @include animate-wrap {\n        & #{$item-class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate {\n            #{$item-class} {\n                top: 0;\n                opacity: 1;\n                transition: top $transition, opacity $transition;\n            }\n\n            @for $i from 0 through 99 {\n                #{$item-class}:nth-child(#{$i}) {\n                    transition-delay: $i * 0.1s + $delay;\n                }\n            }\n        }\n    }\n}\n\n@mixin desktop-only() {\n    @media (max-width: map-get($gridBreakpoints, 'md') - 1) {\n        display: none;\n    }\n}\n\n@mixin desktop-tablet-only() {\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        display: none;\n    }\n}\n\n@mixin mobile-tablet-only() {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        display: none;\n    }\n}\n\n@mixin mobile-only() {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        display: none;\n    }\n}\n\n//typografy\n%heading-margin-reset {\n    margin: 0;\n}\n\n@mixin heading($name) {\n    @include text-size($name);\n    color: var(--pc-text-header-color);\n    @extend %heading-margin-reset;\n    @include text-accent();\n}\n\n@mixin heading0 {\n    @include heading(display-5);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-3);\n    }\n}\n\n@mixin heading1 {\n    @include heading(display-4);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-2);\n    }\n}\n\n@mixin heading2 {\n    @include heading(display-2);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        @include text-size(display-1);\n    }\n}\n\n@mixin heading3 {\n    @include heading(header-2);\n}\n\n@mixin heading4 {\n    @include heading(header-1);\n}\n\n@mixin heading5 {\n    @include heading(body-3);\n}\n\n@mixin heading6 {\n    @include heading(body-3);\n}\n\n@mixin paragraph {\n    margin: 0 0 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n/* use this for style redefinitions to awoid problems with\nunpredictable css rules order in build */\n\n@mixin add-specificity($class) {\n    @at-root {\n        #{$class}#{$class} {\n            @content;\n        }\n    }\n}\n\n@mixin slider-shadow-fix($class) {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        @at-root {\n            //fix for hidden slider cards box-shadow overflow\n            // .slick-slide:not(.slick-active) #{$class} {\n            //     box-shadow: none;\n            // }\n\n            //fix for new slider hidden cards\n            .swiper-slide:not(.swiper-slide-visible) #{$class} {\n                box-shadow: none;\n            }\n        }\n    }\n}\n\n@mixin font-feature-settings {\n    font-feature-settings: 'liga', 'kern', 'pnum' on, 'lnum' on, 'ss03' on;\n}\n\n@mixin navigation-popup {\n    z-index: 101;\n\n    display: flex;\n    flex-direction: column;\n\n    min-width: 220px;\n    padding: $indentXS;\n\n    border: 1px solid var(--g-color-line-generic);\n    border-top-width: 0;\n    border-radius: calc(#{$borderRadius} / 2);\n    background: var(--g-color-base-float);\n    box-shadow: 0 3px 10px var(--g-color-sfx-shadow);\n}\n\n@mixin navigation-item {\n    color: var(--g-color-text-primary);\n    @include reset-link-style();\n    @include islands-focus();\n\n    &:hover,\n    &_active {\n        color: var(--g-color-text-link);\n    }\n}\n\n@mixin button($color, $backgroundColor, $hoverColor: $color, $hoverBackgroundColor) {\n    --g-button-background-color: #{$backgroundColor};\n    --g-button-background-color-hover: #{$hoverBackgroundColor};\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:focus {\n        color: $color;\n    }\n\n    &:hover {\n        color: $hoverColor;\n    }\n}\n\n@mixin monochrome-button() {\n    @include add-specificity(&) {\n        @include button(\n            var(--pc-monochrome-button-color),\n            var(--pc-monochrome-button-background-color),\n            $hoverBackgroundColor: var(--pc-monochrome-button-background-color-hover)\n        );\n    }\n}\n\n@mixin centerable-title() {\n    &_centered {\n        text-align: center;\n\n        & > * {\n            margin: 0 auto;\n        }\n    }\n}\n\n@mixin tab-panel() {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n\n    &_centered {\n        justify-content: center;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'md')) {\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        overflow: auto;\n\n        margin-left: -$indentL;\n        margin-right: -$indentL;\n        padding-left: $indentL;\n        padding-right: $indentL - $indentXXXS;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        margin-left: -$indentSM;\n        margin-right: -$indentSM;\n        padding-left: $indentSM;\n        padding-right: $indentXS;\n    }\n}\n\n// indent system for blocks\n@mixin indents($class) {\n    @include add-specificity($class) {\n        @include add-specificity(&) {\n            &_indentTop {\n                &_0 {\n                    margin-top: 0;\n                }\n\n                &_xs {\n                    margin-top: $indentXS;\n                }\n\n                &_s {\n                    margin-top: $indentSM;\n                }\n\n                &_m {\n                    margin-top: $indentM;\n                }\n\n                &_l {\n                    margin-top: $indentL;\n                }\n\n                &_xl {\n                    margin-top: $indentXL;\n                }\n            }\n\n            &_indentBottom {\n                &_0 {\n                    padding-bottom: 0;\n                }\n\n                &_xs {\n                    padding-bottom: $indentXS;\n                }\n\n                &_s {\n                    padding-bottom: $indentSM;\n                }\n\n                &_m {\n                    padding-bottom: $indentM;\n                }\n\n                &_l {\n                    padding-bottom: $indentL;\n                }\n\n                &_xl {\n                    padding-bottom: $indentXL;\n                }\n            }\n        }\n    }\n}\n\n@mixin media-border() {\n    &_border {\n        &_shadow {\n            @include image-shadow();\n        }\n\n        &_line {\n            border-radius: $borderRadius;\n            border: 1px solid var(--g-color-line-generic);\n        }\n\n        &_none {\n            border-radius: $borderRadius;\n        }\n    }\n}\n\n@mixin visibility-classes() {\n    @include add-specificity(&) {\n        &_hidden {\n            display: none;\n        }\n\n        // Преобразуем map в список ключей\n        $keys: map-keys($gridBreakpoints);\n        $length: length($keys);\n\n        @for $i from 1 through $length {\n            $current-key: nth($keys, $i);\n            $current-min: map-get($gridBreakpoints, $current-key);\n\n            @if $i < $length {\n                $next-key: nth($keys, $i + 1);\n                $next-min: map-get($gridBreakpoints, $next-key);\n                $current-max: ($next-min - 1px);\n\n                @media (min-width: $current-min) and (max-width: $current-max) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            } @else {\n                // Последний (до бесконечности)\n                @media (min-width: $current-min) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        // XS (0 до первого брейкпоинта)\n        $first-min: map-get($gridBreakpoints, nth($keys, 1));\n        @media (max-width: ($first-min - 1px)) {\n            &_visible-xs {\n                display: block;\n            }\n        }\n    }\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);