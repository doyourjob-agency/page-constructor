"use strict";(self.webpackChunk_doyourjob_gravity_ui_page_constructor=self.webpackChunk_doyourjob_gravity_ui_page_constructor||[]).push([[9478],{"./src/components/BlockBase/BlockBase.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>components_BlockBase_BlockBase});var react=__webpack_require__("./node_modules/react/index.js"),Col=__webpack_require__("./src/grid/Col/Col.tsx"),cn=__webpack_require__("./src/utils/cn.ts"),blocks=__webpack_require__("./src/utils/blocks.ts"),Anchor=__webpack_require__("./src/components/Anchor/Anchor.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),BlockBase=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/BlockBase/BlockBase.scss"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(BlockBase.Z,options);BlockBase.Z.locals;const b=(0,cn.Ge)("block-base"),BlockBase_BlockBase_BlockBase=props=>{const{anchor,visibility,indent,backgroundFull,visible,hidden,children,className,resetPaddings,qa}=props,{top,bottom}=indent||(resetPaddings?{top:"0",bottom:"0"}:{top:"l",bottom:"l"}),isBackgroundUrl=/^https?:\/\/[^\s/$.?#].[^\s]*$/i.test(backgroundFull||""),visibilityClasses=(0,blocks.A9)(visibility);return react.createElement(Col.J,{className:b({"reset-paddings":resetPaddings,indentTop:top,indentBottom:bottom,...visibilityClasses},className),hidden,visible,reset:!0,qa},anchor&&react.createElement(Anchor.Z,{id:anchor.url,className:b("anchor")}),backgroundFull&&react.createElement("div",{className:b("background-full",{top}),style:isBackgroundUrl?{backgroundImage:`url(${backgroundFull})`}:{backgroundColor:backgroundFull}}),children)},components_BlockBase_BlockBase=BlockBase_BlockBase_BlockBase;BlockBase_BlockBase_BlockBase.__docgenInfo={description:"",methods:[],displayName:"BlockBase",props:{anchor:{required:!1,tsType:{name:"AnchorProps"},description:""},visibility:{required:!1,tsType:{name:"union",raw:"VisibilityPreset | VisibilityMap",elements:[{name:"union",raw:"'mobile' | 'desktop'",elements:[{name:"literal",value:"'mobile'"},{name:"literal",value:"'desktop'"}]},{name:"Partial",elements:[{name:"Record",elements:[{name:"union",raw:"'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'",elements:[{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"},{name:"literal",value:"'xxl'"}]},{name:"boolean"}],raw:"Record<Breakpoint, boolean>"}],raw:"Partial<Record<Breakpoint, boolean>>"}]},description:""},visible:{required:!1,tsType:{name:"GridColumnSize"},description:"@deprecated"},hidden:{required:!1,tsType:{name:"GridColumnSize"},description:"@deprecated"},resetPaddings:{required:!1,tsType:{name:"boolean"},description:"@deprecated"},indent:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    top?: IndentValue;\n    bottom?: IndentValue;\n}",signature:{properties:[{key:"top",value:{name:"union",raw:"'0' | 'xs' | 's' | 'm' | 'l' | 'xl'",elements:[{name:"literal",value:"'0'"},{name:"literal",value:"'xs'"},{name:"literal",value:"'s'"},{name:"literal",value:"'m'"},{name:"literal",value:"'l'"},{name:"literal",value:"'xl'"}],required:!1}},{key:"bottom",value:{name:"union",raw:"'0' | 'xs' | 's' | 'm' | 'l' | 'xl'",elements:[{name:"literal",value:"'0'"},{name:"literal",value:"'xs'"},{name:"literal",value:"'s'"},{name:"literal",value:"'m'"},{name:"literal",value:"'l'"},{name:"literal",value:"'xl'"}],required:!1}}]}},description:""},backgroundFull:{required:!1,tsType:{name:"string"},description:""},blockBackground:{required:!1,tsType:{name:"union",raw:"| {\n      color?: string;\n      image?: string;\n      size?: string;\n      repeat?: string;\n      position?: string;\n      attachment?: string;\n      clip?: string;\n      origin?: string;\n      blendMode?: string;\n  }\n| string\n| undefined",elements:[{name:"signature",type:"object",raw:"{\n    color?: string;\n    image?: string;\n    size?: string;\n    repeat?: string;\n    position?: string;\n    attachment?: string;\n    clip?: string;\n    origin?: string;\n    blendMode?: string;\n}",signature:{properties:[{key:"color",value:{name:"string",required:!1}},{key:"image",value:{name:"string",required:!1}},{key:"size",value:{name:"string",required:!1}},{key:"repeat",value:{name:"string",required:!1}},{key:"position",value:{name:"string",required:!1}},{key:"attachment",value:{name:"string",required:!1}},{key:"clip",value:{name:"string",required:!1}},{key:"origin",value:{name:"string",required:!1}},{key:"blendMode",value:{name:"string",required:!1}}]}},{name:"string"},{name:"undefined"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""},qa:{required:!1,tsType:{name:"string"},description:""}}}},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/BlockBase/BlockBase.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".pc-block-base{--anchor-offset: 48px;position:relative;z-index:1}.pc-block-base.pc-block-base{margin-top:48px;padding:0 0 48px}.pc-block-base.pc-block-base:first-child{margin-top:var(--pc-first-block-indent, 96px)}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentTop_0{margin-top:0}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentTop_xs{margin-top:16px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentTop_s{margin-top:24px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentTop_m{margin-top:32px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentTop_l{margin-top:48px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentTop_xl{margin-top:64px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentBottom_0{padding-bottom:0}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentBottom_xs{padding-bottom:16px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentBottom_s{padding-bottom:24px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentBottom_m{padding-bottom:32px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentBottom_l{padding-bottom:48px}.pc-block-base.pc-block-base.pc-block-base.pc-block-base_indentBottom_xl{padding-bottom:64px}.pc-block-base.pc-block-base_hidden{display:none}@media(min-width: 577px)and (max-width: 768px){.pc-block-base.pc-block-base_visible-sm{display:block}}@media(min-width: 769px)and (max-width: 1080px){.pc-block-base.pc-block-base_visible-md{display:block}}@media(min-width: 1081px)and (max-width: 1184px){.pc-block-base.pc-block-base_visible-lg{display:block}}@media(min-width: 1185px)and (max-width: 1247px){.pc-block-base.pc-block-base_visible-xl{display:block}}@media(min-width: 1248px){.pc-block-base.pc-block-base_visible-xxl{display:block}}@media(max-width: 576px){.pc-block-base.pc-block-base_visible-xs{display:block}}.pc-block-base__background-full{position:absolute;background-size:cover;top:0;left:50%;width:100vw;bottom:0;transform:translateX(-50%);z-index:-1}.pc-block-base__background-full_top_0{top:0}.pc-block-base__background-full_top_xs{top:-16px}.pc-block-base__background-full_top_s{top:-24px}.pc-block-base__background-full_top_m{top:-32px}.pc-block-base__background-full_top_l{top:-48px}.pc-block-base__background-full_top_xl{top:-64px}.pc-block-base.pc-block-base .pc-block-base__background-full{top:-48px}.pc-block-base.pc-block-base:first-child .pc-block-base__background-full{top:calc(var(--pc-first-block-indent, 96px)*-1)}@media only screen and (max-width: 577px){.pc-block-base.pc-block-base .pc-block-base__background-full{top:-32px}.pc-block-base.pc-block-base:first-child .pc-block-base__background-full{top:calc(var(--pc-first-block-mobile-indent, 64px)*-1)}}@media only screen and (max-width: 577px){.pc-block-base.pc-block-base{margin-top:32px;padding-bottom:32px}.pc-block-base.pc-block-base:first-child{margin-top:var(--pc-first-block-mobile-indent, 64px)}}.pc-block-base_reset-paddings.pc-block-base.pc-block-base_reset-paddings.pc-block-base{padding:0;margin:0}@media(max-width: 577px){.pc-block-base{--anchor-offset: 32px}}","",{version:3,sources:["webpack://./src/components/BlockBase/BlockBase.scss","webpack://./styles/mixins.scss","webpack://./styles/variables.scss"],names:[],mappings:"AAKA,eAGI,qBAAA,CAQA,iBAAA,CACA,SAAA,CCqbI,6BAhRA,eCtKE,CDuKF,gBAAA,CAEA,yCAEI,6CAAA,CAsYI,qEACI,YAAA,CAGJ,sEACI,eC1jBT,CD6jBK,qEACI,eC5jBT,CD+jBK,qEACI,eC/jBV,CDkkBM,qEACI,eClkBV,CDqkBM,sEACI,eCrkBT,CD0kBK,wEACI,gBAAA,CAGJ,yEACI,mBCplBT,CDulBK,wEACI,mBCtlBT,CDylBK,wEACI,mBCzlBV,CD4lBM,wEACI,mBC5lBV,CD+lBM,yEACI,mBC/lBT,CDynBH,oCACI,YAAA,CAgBI,+CACI,wCACI,aAAA,CAAA,CAFR,gDACI,wCACI,aAAA,CAAA,CAFR,iDACI,wCACI,aAAA,CAAA,CAFR,iDACI,wCACI,aAAA,CAAA,CAKR,0BACI,yCACI,aAAA,CAAA,CAQhB,yBACI,wCACI,aAAA,CAAA,CD3pBZ,gCACI,iBAAA,CACA,qBAAA,CACA,KAAA,CACA,QAAA,CACA,WAAA,CACA,QAAA,CACA,0BAAA,CACA,UAAA,CAEI,sCACI,KAAA,CAGJ,uCACI,SAAA,CAGJ,sCACI,SAAA,CAGJ,sCACI,SAAA,CAGJ,sCACI,SAAA,CAGJ,uCACI,SAAA,CAMR,6DACI,SAAA,CAIA,yEACI,+CAAA,CAIR,0CACI,6DACI,SAAA,CAIA,yEACI,sDAAA,CAAA,CAOZ,0CCsXA,6BDrXI,eElEF,CFmEE,mBEnEF,CFqEE,yCACI,oDAAA,CAAA,CCiXR,uFD1WI,SAAA,CACA,QAAA,CAIR,yBA5FJ,eA6FQ,qBAAA,CAAA",sourcesContent:["@import '../../../styles/variables.scss';\n@import '../../../styles/mixins.scss';\n\n$block: '.#{$ns}block-base';\n\n#{$block} {\n    $block: &;\n\n    --anchor-offset: #{$indentL};\n\n    @include block();\n\n    @include indents(&);\n\n    @include visibility-classes();\n\n    position: relative;\n    z-index: 1;\n\n    &__background-full {\n        position: absolute;\n        background-size: cover;\n        top: 0;\n        left: 50%;\n        width: 100vw;\n        bottom: 0;\n        transform: translateX(-50%);\n        z-index: -1;\n        &_top {\n            &_0 {\n                top: 0;\n            }\n\n            &_xs {\n                top: -$indentXS;\n            }\n\n            &_s {\n                top: -$indentSM;\n            }\n\n            &_m {\n                top: -$indentM;\n            }\n\n            &_l {\n                top: -$indentL;\n            }\n\n            &_xl {\n                top: -$indentXL;\n            }\n        }\n    }\n\n    @include add-specificity(&) {\n        & #{$block}__background-full {\n            top: -$indentL;\n        }\n\n        &:first-child {\n            & #{$block}__background-full {\n                top: calc(var(--pc-first-block-indent, #{$indentXXL}) * -1);\n            }\n        }\n\n        @media only screen and (max-width: map-get($gridBreakpoints, 'sm')) {\n            & #{$block}__background-full {\n                top: -$indentM;\n            }\n\n            &:first-child {\n                & #{$block}__background-full {\n                    top: calc(var(--pc-first-block-mobile-indent, #{$indentXL}) * -1);\n                }\n            }\n        }\n    }\n\n    @include add-specificity(&) {\n        @media only screen and (max-width: map-get($gridBreakpoints, 'sm')) {\n            margin-top: $indentM;\n            padding-bottom: $indentM;\n\n            &:first-child {\n                margin-top: var(--pc-first-block-mobile-indent, #{$indentXL});\n            }\n        }\n    }\n\n    &_reset-paddings#{$block} {\n        @include add-specificity(&) {\n            padding: 0;\n            margin: 0;\n        }\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        --anchor-offset: #{$indentM};\n    }\n}\n","@import '@gravity-ui/uikit/styles/mixins.scss';\n@import './variables.scss';\n\n//common\n\n@mixin text-size($name) {\n    font-size: var(--g-text-#{$name}-font-size, var(--pc-text-#{$name}-font-size));\n    line-height: var(--g-text-#{$name}-line-height, var(--pc-text-#{$name}-line-height));\n}\n\n@mixin focusable($offset: 0, $mode: 'outline') {\n    @if $mode == 'outline' {\n        &:focus {\n            outline: 2px solid var(--g-color-line-focus);\n            outline-offset: $offset;\n        }\n        &:focus:not(:focus-visible) {\n            outline: 0;\n        }\n    }\n    @if $mode == 'box-shadow' {\n        &:focus {\n            box-shadow: 0 0 0 2px var(--g-color-line-focus);\n        }\n        &:focus:not(:focus-visible) {\n            box-shadow: none;\n        }\n    }\n}\n\n@mixin link() {\n    @include islands-focus();\n\n    color: var(--g-color-text-link);\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n        color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin anchor($offset: 0px) {\n    display: block;\n    position: relative;\n    top: calc(-1 * var(--header-height) - #{$offset});\n    visibility: hidden;\n}\n\n@mixin mobile-scrollable($offset: $normalOffset) {\n    margin-left: -$offset;\n    padding-left: $offset;\n    padding-right: $offset;\n    width: calc(100% + #{$offset} * 2);\n    overflow-x: auto;\n\n    &::after {\n        content: '';\n        height: 1px;\n        padding-right: $offset;\n    }\n}\n\n@mixin reset-button-style() {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n    border: none;\n    outline: none;\n    color: inherit;\n    background: none;\n    cursor: pointer;\n}\n\n@mixin reset-link-style() {\n    color: inherit;\n    text-decoration: none;\n}\n\n@mixin reset-list-style() {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n@mixin islands-focus() {\n    outline: none;\n\n    .utilityfocus &:focus {\n        outline: 2px solid #ffdb4d;\n    }\n}\n\n@mixin shadow-hover($pseudo: before) {\n    position: relative;\n\n    &::#{$pseudo} {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n\n        border-radius: inherit;\n        box-shadow: var(--shadow-offset-x, 0) var(--shadow-offset-y, 0) var(--shadow-blur, 10px)\n            var(--shadow-spread, 0) var(--shadow-color, --pc-color-sfx-shadow);\n        opacity: var(--shadow-opacity, 0.4);\n        transition: opacity ease-in var(--shadow-transition-time, 0.15s);\n    }\n}\n\n@mixin up-hover($color: var(--pc-color-sfx-shadow)) {\n    @include shadow-hover(before);\n\n    --shadow-offset-y: 5px;\n    --shadow-blur: 12px;\n    --shadow-color: #{$color};\n    --shadow-opacity: 0;\n\n    &:hover {\n        --shadow-opacity: 1;\n    }\n\n    .mobile &::before {\n        box-shadow: none;\n    }\n}\n\n@mixin header-link() {\n    @include link;\n\n    --pc-text-header-color: var(--g-color-text-link);\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin icon($size: 32px) {\n    width: $size;\n    height: $size;\n    background-size: cover;\n}\n\n@mixin top-content-offset($offset) {\n    top: calc(var(--header-height) + #{$offset});\n}\n\n@mixin label($size: m) {\n    @if $size == m {\n        @include text-size(body-1);\n\n        $label-height: 20px;\n\n        display: inline-block;\n        padding: 0 8px;\n        border-radius: 2px;\n        height: $label-height;\n        line-height: $label-height;\n    }\n\n    @if $size == s {\n        @include text-size(caption-2);\n\n        $label-height: 16px;\n\n        padding: 0 $indent4XS;\n        height: $label-height;\n        line-height: $label-height;\n    }\n}\n\n//constructor\n\n@mixin block {\n    @include add-specificity(&) {\n        margin-top: $indentL;\n        padding: 0 0 $indentL;\n\n        &:first-child {\n            // @deprecated\n            margin-top: var(--pc-first-block-indent, #{$indentXXL});\n        }\n    }\n}\n\n@mixin add-theme() {\n    &_theme_dark {\n        color: var(--g-color-text-light-primary);\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        .yfm {\n            color: var(--g-color-text-light-primary);\n        }\n    }\n}\n\n@mixin justify() {\n    &_justify_center {\n        text-align: center;\n    }\n\n    &_justify_end {\n        text-align: right;\n    }\n}\n\n@mixin background() {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n}\n\n@mixin shadow() {\n    @extend %shadow-hover;\n}\n\n%shadow {\n    box-shadow: 0px 4px 24px var(--pc-color-sfx-shadow), 0px 2px 8px var(--pc-color-sfx-shadow);\n}\n\n%shadow-hover {\n    @extend %shadow;\n\n    &:hover {\n        box-shadow: 0px 4px 24px var(--g-color-sfx-shadow), 0px 2px 8px var(--g-color-sfx-shadow);\n        cursor: pointer;\n    }\n}\n\n@mixin card-hover() {\n    transition: transform 0.3s ease-out;\n    &:hover {\n        transform: translateY(-8px);\n    }\n}\n\n@mixin image-shadow() {\n    box-shadow: 0 2px 8px var(--pc-color-sfx-shadow), 0 4px 24px var(--pc-color-sfx-shadow);\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n}\n\n@mixin card-border($hover: false) {\n    &_border_line {\n        border: 1px solid var(--g-color-line-generic);\n    }\n\n    &_border_line,\n    &_border_none {\n        @if $hover {\n            @include card-hover();\n        }\n    }\n\n    &_border_shadow {\n        @extend %shadow;\n        @if $hover {\n            @include card-hover();\n            &:hover {\n                background-color: var(--pc-color-base-float-hover);\n            }\n        }\n    }\n}\n\n@mixin card($hover: false) {\n    min-height: 248px;\n    height: 100%;\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n    background-color: var(--g-color-base-float);\n\n    transition: box-shadow 0.3s $ease-out-cubic;\n    @include card-border($hover);\n}\n\n@mixin card-image {\n    margin: $imagePadding;\n    border-radius: calc(#{$borderRadius} - #{$imagePadding});\n}\n\n@mixin reset-link-hover {\n    &:hover,\n    &:active {\n        --pc-text-header-color: inherit;\n        color: inherit;\n    }\n}\n\n@mixin animate-wrap {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        &.#{$ns}AnimateBlock,\n        .#{$ns}AnimateBlock & {\n            @content;\n        }\n    }\n}\n\n@mixin animate($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            top: 0;\n            opacity: 1;\n            transition: top $transition, opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-fade($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            opacity: 1;\n            transition: opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-slides($item-class, $delay: 0s) {\n    @include animate-wrap {\n        & #{$item-class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate {\n            #{$item-class} {\n                top: 0;\n                opacity: 1;\n                transition: top $transition, opacity $transition;\n            }\n\n            @for $i from 0 through 99 {\n                #{$item-class}:nth-child(#{$i}) {\n                    transition-delay: $i * 0.1s + $delay;\n                }\n            }\n        }\n    }\n}\n\n@mixin desktop-only() {\n    @media (max-width: map-get($gridBreakpoints, 'md') - 1) {\n        display: none;\n    }\n}\n\n@mixin desktop-tablet-only() {\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        display: none;\n    }\n}\n\n@mixin mobile-tablet-only() {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        display: none;\n    }\n}\n\n@mixin mobile-only() {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        display: none;\n    }\n}\n\n//typografy\n%heading-margin-reset {\n    margin: 0;\n}\n\n@mixin heading($name) {\n    @include text-size($name);\n    color: var(--pc-text-header-color);\n    @extend %heading-margin-reset;\n    @include text-accent();\n}\n\n@mixin heading0 {\n    @include heading(display-5);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-3);\n    }\n}\n\n@mixin heading1 {\n    @include heading(display-4);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-2);\n    }\n}\n\n@mixin heading2 {\n    @include heading(display-2);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        @include text-size(display-1);\n    }\n}\n\n@mixin heading3 {\n    @include heading(header-2);\n}\n\n@mixin heading4 {\n    @include heading(header-1);\n}\n\n@mixin heading5 {\n    @include heading(body-3);\n}\n\n@mixin heading6 {\n    @include heading(body-3);\n}\n\n@mixin paragraph {\n    margin: 0 0 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n/* use this for style redefinitions to awoid problems with\nunpredictable css rules order in build */\n\n@mixin add-specificity($class) {\n    @at-root {\n        #{$class}#{$class} {\n            @content;\n        }\n    }\n}\n\n@mixin slider-shadow-fix($class) {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        @at-root {\n            //fix for hidden slider cards box-shadow overflow\n            // .slick-slide:not(.slick-active) #{$class} {\n            //     box-shadow: none;\n            // }\n\n            //fix for new slider hidden cards\n            .swiper-slide:not(.swiper-slide-visible) #{$class} {\n                box-shadow: none;\n            }\n        }\n    }\n}\n\n@mixin font-feature-settings {\n    font-feature-settings: 'liga', 'kern', 'pnum' on, 'lnum' on, 'ss03' on;\n}\n\n@mixin navigation-popup {\n    z-index: 101;\n\n    display: flex;\n    flex-direction: column;\n\n    min-width: 220px;\n    padding: $indentXS;\n\n    border: 1px solid var(--g-color-line-generic);\n    border-top-width: 0;\n    border-radius: calc(#{$borderRadius} / 2);\n    background: var(--g-color-base-float);\n    box-shadow: 0 3px 10px var(--g-color-sfx-shadow);\n}\n\n@mixin navigation-item {\n    color: var(--g-color-text-primary);\n    @include reset-link-style();\n    @include islands-focus();\n\n    &:hover,\n    &_active {\n        color: var(--g-color-text-link);\n    }\n}\n\n@mixin button($color, $backgroundColor, $hoverColor: $color, $hoverBackgroundColor) {\n    --g-button-background-color: #{$backgroundColor};\n    --g-button-background-color-hover: #{$hoverBackgroundColor};\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:focus {\n        color: $color;\n    }\n\n    &:hover {\n        color: $hoverColor;\n    }\n}\n\n@mixin monochrome-button() {\n    @include add-specificity(&) {\n        @include button(\n            var(--pc-monochrome-button-color),\n            var(--pc-monochrome-button-background-color),\n            $hoverBackgroundColor: var(--pc-monochrome-button-background-color-hover)\n        );\n    }\n}\n\n@mixin centerable-title() {\n    &_centered {\n        text-align: center;\n\n        & > * {\n            margin: 0 auto;\n        }\n    }\n}\n\n@mixin tab-panel() {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n\n    &_centered {\n        justify-content: center;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'md')) {\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        overflow: auto;\n\n        margin-left: -$indentL;\n        margin-right: -$indentL;\n        padding-left: $indentL;\n        padding-right: $indentL - $indentXXXS;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        margin-left: -$indentSM;\n        margin-right: -$indentSM;\n        padding-left: $indentSM;\n        padding-right: $indentXS;\n    }\n}\n\n// indent system for blocks\n@mixin indents($class) {\n    @include add-specificity($class) {\n        @include add-specificity(&) {\n            &_indentTop {\n                &_0 {\n                    margin-top: 0;\n                }\n\n                &_xs {\n                    margin-top: $indentXS;\n                }\n\n                &_s {\n                    margin-top: $indentSM;\n                }\n\n                &_m {\n                    margin-top: $indentM;\n                }\n\n                &_l {\n                    margin-top: $indentL;\n                }\n\n                &_xl {\n                    margin-top: $indentXL;\n                }\n            }\n\n            &_indentBottom {\n                &_0 {\n                    padding-bottom: 0;\n                }\n\n                &_xs {\n                    padding-bottom: $indentXS;\n                }\n\n                &_s {\n                    padding-bottom: $indentSM;\n                }\n\n                &_m {\n                    padding-bottom: $indentM;\n                }\n\n                &_l {\n                    padding-bottom: $indentL;\n                }\n\n                &_xl {\n                    padding-bottom: $indentXL;\n                }\n            }\n        }\n    }\n}\n\n@mixin media-border() {\n    &_border {\n        &_shadow {\n            @include image-shadow();\n        }\n\n        &_line {\n            border-radius: $borderRadius;\n            border: 1px solid var(--g-color-line-generic);\n        }\n\n        &_none {\n            border-radius: $borderRadius;\n        }\n    }\n}\n\n@mixin visibility-classes() {\n    @include add-specificity(&) {\n        &_hidden {\n            display: none;\n        }\n\n        // Преобразуем map в список ключей\n        $keys: map-keys($gridBreakpoints);\n        $length: length($keys);\n\n        @for $i from 1 through $length {\n            $current-key: nth($keys, $i);\n            $current-min: map-get($gridBreakpoints, $current-key);\n\n            @if $i < $length {\n                $next-key: nth($keys, $i + 1);\n                $next-min: map-get($gridBreakpoints, $next-key);\n                $current-max: ($next-min - 1px);\n\n                @media (min-width: $current-min) and (max-width: $current-max) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            } @else {\n                // Последний (до бесконечности)\n                @media (min-width: $current-min) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        // XS (0 до первого брейкпоинта)\n        $first-min: map-get($gridBreakpoints, nth($keys, 1));\n        @media (max-width: ($first-min - 1px)) {\n            &_visible-xs {\n                display: block;\n            }\n        }\n    }\n}\n","//common\n\n$ns: 'pc-';\n$borderRadius: var(--pc-border-radius);\n$borderRadiusXS: var(--pc-border-radius-xs);\n$borderRadiusS: var(--pc-border-radius-s);\n$imagePadding: var(--pc-image-padding);\n\n//indents\n$indent4XS: 4px;\n$indentXXXS: 8px;\n$indentXXS: 12px;\n$indentXS: 16px;\n$indentS: 20px;\n$indentSM: 24px;\n$indentM: 32px;\n$indentL: 48px;\n$indentXL: 64px;\n$indentXXL: 96px;\n$indentXXXL: 128px;\n$indent4XL: 160px;\n$normalOffset: 20px;\n$contentMargin: $indentM;\n\n$contentLiftIndent: $indentXL;\n$contentLiftIndentMobile: $indentM;\n\n$navigationIconIndent: 6px;\n\n//slider\n$sliderArrowSize: 42px;\n$headerSliderLargeBreakpoint: 1410px;\n\n//animation\n$ease-out-quadratic: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-out-cubic: cubic-bezier(0.22, 0.61, 0.36, 1);\n$transition: 0.8s $ease-out-quadratic;\n$animationDuration: 300ms;\n\n//colors\n$videoPlayButtonGrey: #eff2f8;\n$videoPlayerBg: #000;\n$secondary: var(--g-color-text-secondary);\n$lightSecondary: var(--g-color-text-light-secondary);\n\n//grid\n$newContentWidth: 1232px;\n$gridBreakpoints: (\n    'sm': 577px,\n    'md': 769px,\n    'lg': 1081px,\n    'xl': 1185px,\n    'xxl': 1248px,\n);\n\n$gridGutter: 8px;\n$gridContainerPadding: 40px;\n$gridGutterMobile: 8px;\n$contentWidth: calc(#{$newContentWidth} + #{$gridGutter} * 2 + #{$gridContainerPadding} * 2);\n\n$gridContainerMargin: 16px;\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);