"use strict";(self.webpackChunk_doyourjob_gravity_ui_page_constructor=self.webpackChunk_doyourjob_gravity_ui_page_constructor||[]).push([[8594],{"./src/components/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>src_components_Button_Button});var react=__webpack_require__("./node_modules/react/index.js"),StoreBadge=__webpack_require__("./node_modules/@gravity-ui/components/build/esm/components/StoreBadge/StoreBadge.js"),constants=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/components/mobile/constants.js"),Icon=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/components/Icon/Icon.js"),Button=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/components/Button/Button.js"),localeContext=__webpack_require__("./src/context/localeContext/localeContext.ts"),useAnalytics=__webpack_require__("./src/hooks/useAnalytics.ts"),svg=__webpack_require__("./src/utils/svg.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Github=props=>react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32",width:"32",height:"32",fill:"currentColor"},svg.i,props),react.createElement("path",{d:"M25.524 10.479a10.952 10.952 0 0 0-4.003-4.004C19.836 5.492 17.996 5 16 5s-3.836.492-5.521 1.475a10.95 10.95 0 0 0-4.004 4.004C5.492 12.164 5 14.004 5 15.998c0 2.397.7 4.553 2.098 6.467 1.4 1.915 3.206 3.24 5.421 3.975.258.048.45.014.573-.1a.56.56 0 0 0 .186-.43l-.007-.773a128.35 128.35 0 0 1-.007-1.275l-.33.057c-.21.039-.474.055-.794.05a6.048 6.048 0 0 1-.996-.1 2.224 2.224 0 0 1-.96-.43 1.817 1.817 0 0 1-.63-.88l-.143-.33a3.58 3.58 0 0 0-.45-.73c-.206-.267-.414-.449-.624-.544l-.1-.072a1.05 1.05 0 0 1-.186-.172.785.785 0 0 1-.13-.2c-.028-.067-.004-.122.072-.166.077-.043.215-.064.416-.064l.286.043c.191.039.427.153.71.344.28.19.512.44.694.744.22.392.484.69.795.896.31.205.623.308.938.308.315 0 .587-.024.816-.072.23-.048.444-.12.645-.215.086-.64.32-1.131.701-1.475a9.8 9.8 0 0 1-1.468-.258 5.846 5.846 0 0 1-1.346-.559 3.855 3.855 0 0 1-1.153-.96c-.306-.381-.556-.883-.752-1.503-.196-.62-.293-1.337-.293-2.148 0-1.156.377-2.14 1.131-2.951-.353-.869-.32-1.843.1-2.922.277-.086.688-.021 1.232.193.544.215.943.4 1.196.552.253.153.456.282.609.387a10.17 10.17 0 0 1 2.75-.373c.945 0 1.862.124 2.75.373l.544-.344c.372-.23.812-.44 1.318-.63.506-.191.893-.244 1.16-.158.43 1.08.468 2.053.115 2.922.754.812 1.131 1.795 1.131 2.95 0 .812-.098 1.53-.293 2.156-.196.626-.449 1.127-.76 1.504-.31.377-.696.695-1.16.952a5.855 5.855 0 0 1-1.346.559 9.84 9.84 0 0 1-1.468.258c.496.43.745 1.108.745 2.034v3.022c0 .171.06.315.179.43.12.114.308.147.566.1 2.215-.736 4.022-2.06 5.42-3.975 1.4-1.915 2.099-4.07 2.099-6.467 0-1.995-.492-3.835-1.476-5.52z"}));Github.__docgenInfo={description:"",methods:[],displayName:"Github"};var common=__webpack_require__("./src/models/common.ts"),cn=__webpack_require__("./src/utils/cn.ts"),utils_url=__webpack_require__("./src/utils/url.ts"),addComponentKeysets=__webpack_require__("./node_modules/@gravity-ui/uikit/build/esm/components/utils/addComponentKeysets.js");const en_namespaceObject=JSON.parse('{"image-alt":"Button image"}'),ru_namespaceObject=JSON.parse('{"image-alt":"Иконка кнопки"}'),i18n=(0,addComponentKeysets.e)({en:en_namespaceObject,ru:ru_namespaceObject},`${cn.A7}Button`),themeMap={normal:"normal",action:"action",flat:"flat",light:"flat-secondary",clear:"flat-secondary",raised:"raised",pseudo:"outlined",link:"outlined-info",accent:"action",websearch:"action","flat-special":"flat-contrast","normal-special":"normal-contrast","normal-dark":"outlined-contrast","pseudo-special":"outlined-contrast"},sizeMap={xs:"s",ns:"s",s:"m",m:"l",l:"l",n:"l",head:"l",promo:"xl"},toCommonView=theme=>themeMap[theme]??theme,toCommonSize=size=>sizeMap[size]??size;var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),Button_Button=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/Button/Button.scss"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(Button_Button.Z,options);Button_Button.Z.locals;function Button_extends(){return Button_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Button_extends.apply(null,arguments)}const b=(0,cn.Ge)("button-block"),Button_Button_Button=props=>{const{tld}=(0,react.useContext)(localeContext.R),{className,analyticsEvents,size="l",theme="normal",url,urlTitle,img,onClick:onClickOrigin,text,width,...rest}=props,handleAnalytics=(0,useAnalytics.z)(common.IZ.Button,url),onClick=(0,react.useCallback)((e=>{handleAnalytics(analyticsEvents),onClickOrigin&&onClickOrigin(e)}),[handleAnalytics,analyticsEvents,onClickOrigin]),buttonModifiers={size,theme,width},buttonImg=img instanceof Object?{url:img.url,position:img.position||"left",alt:img.alt}:{url:img,position:"left"},buttonClass=b(img?{position:buttonImg.position,...buttonModifiers}:{...buttonModifiers},className),buttonProps={...rest,onClick};if("app-store"===theme||"google-play"===theme){const platform="app-store"===theme?constants.t.IOS:constants.t.ANDROID;return react.createElement(StoreBadge.M,{className:buttonClass,platform,href:url})}let icon,image=img&&react.createElement("img",{className:b("image"),src:buttonImg.url,alt:buttonImg.alt||i18n("image-alt")});"github"===theme&&(icon=react.createElement(Icon.J,{className:b("icon"),data:Github,size:24,qa:"button-icon"}),image=void 0);const buttonTheme="scale"===theme?"accent":theme;return react.createElement(Button.z,Button_extends({className:buttonClass,view:toCommonView(buttonTheme),size:toCommonSize(size),href:url?(0,utils_url.fk)(url,tld):void 0,title:urlTitle,width},buttonProps),icon&&"left"===buttonImg.position?icon:null,react.createElement("span",{className:b("content")},image&&"left"===buttonImg.position?image:null,react.createElement("span",{className:b("text")},text),image&&"right"===buttonImg.position?image:null),icon&&"right"===buttonImg.position?icon:null)},src_components_Button_Button=Button_Button_Button;Button_Button_Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{qa:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},url:{required:!1,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"ReactMouseEventHandler",raw:"React.MouseEventHandler<HTMLButtonElement | HTMLAnchorElement>",elements:[{name:"union",raw:"HTMLButtonElement | HTMLAnchorElement",elements:[{name:"HTMLButtonElement"},{name:"HTMLAnchorElement"}]}]},description:""}},composes:["Omit"]}},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/Button/Button.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".pc-button-block{--g-button-focus-outline-color: var(--g-color-line-focus)}.pc-button-block__content{display:flex;align-items:center}.pc-button-block__image{width:18px;height:18px}.pc-button-block__image+.pc-button-block__text,.pc-button-block__text+.pc-button-block__image{margin-left:var(--btn-image-margin)}.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github{--g-button-background-color: var(--pc-monochrome-button-background-color);--g-button-background-color-hover: var(--pc-monochrome-button-background-color-hover)}.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github,.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github:link,.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github:visited,.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github:active,.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github:focus{color:var(--pc-monochrome-button-color)}.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github.pc-button-block_theme_github:hover{color:var(--pc-monochrome-button-color)}.pc-button-block_theme_scale::before,.pc-button-block_theme_scale::after{border-radius:300px}.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome{--g-button-background-color: var(--pc-monochrome-button-background-color);--g-button-background-color-hover: var(--pc-monochrome-button-background-color-hover)}.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome,.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome:link,.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome:visited,.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome:active,.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome:focus{color:var(--pc-monochrome-button-color)}.pc-button-block_theme_monochrome.pc-button-block_theme_monochrome:hover{color:var(--pc-monochrome-button-color)}.pc-button-block_theme_normal-contrast:focus::before,.pc-button-block_theme_raised:focus::before{outline-offset:1px}.pc-button-block_size_s{--btn-image-margin: 10px}.pc-button-block_size_m{--btn-image-margin: 13px}.pc-button-block_size_l{--btn-image-margin: 18px}.pc-button-block_size_xl{--btn-image-margin: 25px}.pc-button-block_width_max .pc-button-block__text{width:100%}","",{version:3,sources:["webpack://./src/components/Button/Button.scss","webpack://./styles/mixins.scss"],names:[],mappings:"AAKA,iBACI,yDAAA,CAEA,0BACI,YAAA,CACA,kBAAA,CAGJ,wBACI,UAAA,CACA,WAAA,CAGJ,8FAEI,mCAAA,CCkbA,qHAsDJ,yEAAA,CACA,qFAAA,CAEA,mmBAKI,uCAWI,CARR,2HACI,uCAOI,CDjfJ,yEAEI,mBAAA,CCsaJ,mEAsDJ,yEAAA,CACA,qFAAA,CAEA,yWAKI,uCAWI,CARR,yEACI,uCAOI,CDteA,iGACI,kBAAA,CAMR,wBACI,wBAAA,CAGJ,wBACI,wBAAA,CAGJ,wBACI,wBAAA,CAGJ,yBACI,wBAAA,CAMA,kDACI,UAAA",sourcesContent:["@import '../../../styles/mixins.scss';\n@import '../../../styles/variables.scss';\n\n$block: '.#{$ns}button-block';\n\n#{$block} {\n    --g-button-focus-outline-color: var(--g-color-line-focus);\n\n    &__content {\n        display: flex;\n        align-items: center;\n    }\n\n    &__image {\n        width: 18px;\n        height: 18px;\n    }\n\n    &__image + &__text,\n    &__text + &__image {\n        margin-left: var(--btn-image-margin);\n    }\n\n    &_theme {\n        &_github {\n            &#{&} {\n                @include monochrome-button();\n            }\n        }\n\n        &_scale::before,\n        &_scale::after {\n            border-radius: 300px;\n        }\n\n        &_monochrome {\n            @include monochrome-button();\n        }\n\n        &_normal-contrast,\n        &_raised {\n            &:focus::before {\n                outline-offset: 1px;\n            }\n        }\n    }\n\n    &_size {\n        &_s {\n            --btn-image-margin: 10px;\n        }\n\n        &_m {\n            --btn-image-margin: 13px;\n        }\n\n        &_l {\n            --btn-image-margin: 18px;\n        }\n\n        &_xl {\n            --btn-image-margin: 25px;\n        }\n    }\n\n    &_width {\n        &_max {\n            #{$block}__text {\n                width: 100%;\n            }\n        }\n    }\n}\n","@import '@gravity-ui/uikit/styles/mixins.scss';\n@import './variables.scss';\n\n//common\n\n@mixin text-size($name) {\n    font-size: var(--g-text-#{$name}-font-size, var(--pc-text-#{$name}-font-size));\n    line-height: var(--g-text-#{$name}-line-height, var(--pc-text-#{$name}-line-height));\n}\n\n@mixin focusable($offset: 0, $mode: 'outline') {\n    @if $mode == 'outline' {\n        &:focus {\n            outline: 2px solid var(--g-color-line-focus);\n            outline-offset: $offset;\n        }\n        &:focus:not(:focus-visible) {\n            outline: 0;\n        }\n    }\n    @if $mode == 'box-shadow' {\n        &:focus {\n            box-shadow: 0 0 0 2px var(--g-color-line-focus);\n        }\n        &:focus:not(:focus-visible) {\n            box-shadow: none;\n        }\n    }\n}\n\n@mixin link() {\n    @include islands-focus();\n\n    color: var(--g-color-text-link);\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n        color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin anchor($offset: 0px) {\n    display: block;\n    position: relative;\n    top: calc(-1 * var(--header-height) - #{$offset});\n    visibility: hidden;\n}\n\n@mixin mobile-scrollable($offset: $normalOffset) {\n    margin-left: -$offset;\n    padding-left: $offset;\n    padding-right: $offset;\n    width: calc(100% + #{$offset} * 2);\n    overflow-x: auto;\n\n    &::after {\n        content: '';\n        height: 1px;\n        padding-right: $offset;\n    }\n}\n\n@mixin reset-button-style() {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n    border: none;\n    outline: none;\n    color: inherit;\n    background: none;\n    cursor: pointer;\n}\n\n@mixin reset-link-style() {\n    color: inherit;\n    text-decoration: none;\n}\n\n@mixin reset-list-style() {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n@mixin islands-focus() {\n    outline: none;\n\n    .utilityfocus &:focus {\n        outline: 2px solid #ffdb4d;\n    }\n}\n\n@mixin shadow-hover($pseudo: before) {\n    position: relative;\n\n    &::#{$pseudo} {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n\n        border-radius: inherit;\n        box-shadow: var(--shadow-offset-x, 0) var(--shadow-offset-y, 0) var(--shadow-blur, 10px)\n            var(--shadow-spread, 0) var(--shadow-color, --pc-color-sfx-shadow);\n        opacity: var(--shadow-opacity, 0.4);\n        transition: opacity ease-in var(--shadow-transition-time, 0.15s);\n    }\n}\n\n@mixin up-hover($color: var(--pc-color-sfx-shadow)) {\n    @include shadow-hover(before);\n\n    --shadow-offset-y: 5px;\n    --shadow-blur: 12px;\n    --shadow-color: #{$color};\n    --shadow-opacity: 0;\n\n    &:hover {\n        --shadow-opacity: 1;\n    }\n\n    .mobile &::before {\n        box-shadow: none;\n    }\n}\n\n@mixin header-link() {\n    @include link;\n\n    --pc-text-header-color: var(--g-color-text-link);\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin icon($size: 32px) {\n    width: $size;\n    height: $size;\n    background-size: cover;\n}\n\n@mixin top-content-offset($offset) {\n    top: calc(var(--header-height) + #{$offset});\n}\n\n@mixin label($size: m) {\n    @if $size == m {\n        @include text-size(body-1);\n\n        $label-height: 20px;\n\n        display: inline-block;\n        padding: 0 8px;\n        border-radius: 2px;\n        height: $label-height;\n        line-height: $label-height;\n    }\n\n    @if $size == s {\n        @include text-size(caption-2);\n\n        $label-height: 16px;\n\n        padding: 0 $indent4XS;\n        height: $label-height;\n        line-height: $label-height;\n    }\n}\n\n//constructor\n\n@mixin block {\n    @include add-specificity(&) {\n        margin-top: $indentL;\n        padding: 0 0 $indentL;\n\n        &:first-child {\n            // @deprecated\n            margin-top: var(--pc-first-block-indent, #{$indentXXL});\n        }\n    }\n}\n\n@mixin add-theme() {\n    &_theme_dark {\n        color: var(--g-color-text-light-primary);\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        .yfm {\n            color: var(--g-color-text-light-primary);\n        }\n    }\n}\n\n@mixin justify() {\n    &_justify_center {\n        text-align: center;\n    }\n\n    &_justify_end {\n        text-align: right;\n    }\n}\n\n@mixin background() {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n}\n\n@mixin shadow() {\n    @extend %shadow-hover;\n}\n\n%shadow {\n    box-shadow: 0px 4px 24px var(--pc-color-sfx-shadow), 0px 2px 8px var(--pc-color-sfx-shadow);\n}\n\n%shadow-hover {\n    @extend %shadow;\n\n    &:hover {\n        box-shadow: 0px 4px 24px var(--g-color-sfx-shadow), 0px 2px 8px var(--g-color-sfx-shadow);\n        cursor: pointer;\n    }\n}\n\n@mixin card-hover() {\n    transition: transform 0.3s ease-out;\n    &:hover {\n        transform: translateY(-8px);\n    }\n}\n\n@mixin image-shadow() {\n    box-shadow: 0 2px 8px var(--pc-color-sfx-shadow), 0 4px 24px var(--pc-color-sfx-shadow);\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n}\n\n@mixin card-border($hover: false) {\n    &_border_line {\n        border: 1px solid var(--g-color-line-generic);\n    }\n\n    &_border_line,\n    &_border_none {\n        @if $hover {\n            @include card-hover();\n        }\n    }\n\n    &_border_shadow {\n        @extend %shadow;\n        @if $hover {\n            @include card-hover();\n            &:hover {\n                background-color: var(--pc-color-base-float-hover);\n            }\n        }\n    }\n}\n\n@mixin card($hover: false) {\n    min-height: 248px;\n    height: 100%;\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n    background-color: var(--g-color-base-float);\n\n    transition: box-shadow 0.3s $ease-out-cubic;\n    @include card-border($hover);\n}\n\n@mixin card-image {\n    margin: $imagePadding;\n    border-radius: calc(#{$borderRadius} - #{$imagePadding});\n}\n\n@mixin reset-link-hover {\n    &:hover,\n    &:active {\n        --pc-text-header-color: inherit;\n        color: inherit;\n    }\n}\n\n@mixin animate-wrap {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        &.#{$ns}AnimateBlock,\n        .#{$ns}AnimateBlock & {\n            @content;\n        }\n    }\n}\n\n@mixin animate($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            top: 0;\n            opacity: 1;\n            transition: top $transition, opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-fade($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            opacity: 1;\n            transition: opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-slides($item-class, $delay: 0s) {\n    @include animate-wrap {\n        & #{$item-class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate {\n            #{$item-class} {\n                top: 0;\n                opacity: 1;\n                transition: top $transition, opacity $transition;\n            }\n\n            @for $i from 0 through 99 {\n                #{$item-class}:nth-child(#{$i}) {\n                    transition-delay: $i * 0.1s + $delay;\n                }\n            }\n        }\n    }\n}\n\n@mixin desktop-only() {\n    @media (max-width: map-get($gridBreakpoints, 'md') - 1) {\n        display: none;\n    }\n}\n\n@mixin desktop-tablet-only() {\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        display: none;\n    }\n}\n\n@mixin mobile-tablet-only() {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        display: none;\n    }\n}\n\n@mixin mobile-only() {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        display: none;\n    }\n}\n\n//typografy\n%heading-margin-reset {\n    margin: 0;\n}\n\n@mixin heading($name) {\n    @include text-size($name);\n    color: var(--pc-text-header-color);\n    @extend %heading-margin-reset;\n    @include text-accent();\n}\n\n@mixin heading0 {\n    @include heading(display-5);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-3);\n    }\n}\n\n@mixin heading1 {\n    @include heading(display-4);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-2);\n    }\n}\n\n@mixin heading2 {\n    @include heading(display-2);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        @include text-size(display-1);\n    }\n}\n\n@mixin heading3 {\n    @include heading(header-2);\n}\n\n@mixin heading4 {\n    @include heading(header-1);\n}\n\n@mixin heading5 {\n    @include heading(body-3);\n}\n\n@mixin heading6 {\n    @include heading(body-3);\n}\n\n@mixin paragraph {\n    margin: 0 0 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n/* use this for style redefinitions to awoid problems with\nunpredictable css rules order in build */\n\n@mixin add-specificity($class) {\n    @at-root {\n        #{$class}#{$class} {\n            @content;\n        }\n    }\n}\n\n@mixin slider-shadow-fix($class) {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        @at-root {\n            //fix for hidden slider cards box-shadow overflow\n            // .slick-slide:not(.slick-active) #{$class} {\n            //     box-shadow: none;\n            // }\n\n            //fix for new slider hidden cards\n            .swiper-slide:not(.swiper-slide-visible) #{$class} {\n                box-shadow: none;\n            }\n        }\n    }\n}\n\n@mixin font-feature-settings {\n    font-feature-settings: 'liga', 'kern', 'pnum' on, 'lnum' on, 'ss03' on;\n}\n\n@mixin navigation-popup {\n    z-index: 101;\n\n    display: flex;\n    flex-direction: column;\n\n    min-width: 220px;\n    padding: $indentXS;\n\n    border: 1px solid var(--g-color-line-generic);\n    border-top-width: 0;\n    border-radius: calc(#{$borderRadius} / 2);\n    background: var(--g-color-base-float);\n    box-shadow: 0 3px 10px var(--g-color-sfx-shadow);\n}\n\n@mixin navigation-item {\n    color: var(--g-color-text-primary);\n    @include reset-link-style();\n    @include islands-focus();\n\n    &:hover,\n    &_active {\n        color: var(--g-color-text-link);\n    }\n}\n\n@mixin button($color, $backgroundColor, $hoverColor: $color, $hoverBackgroundColor) {\n    --g-button-background-color: #{$backgroundColor};\n    --g-button-background-color-hover: #{$hoverBackgroundColor};\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:focus {\n        color: $color;\n    }\n\n    &:hover {\n        color: $hoverColor;\n    }\n}\n\n@mixin monochrome-button() {\n    @include add-specificity(&) {\n        @include button(\n            var(--pc-monochrome-button-color),\n            var(--pc-monochrome-button-background-color),\n            $hoverBackgroundColor: var(--pc-monochrome-button-background-color-hover)\n        );\n    }\n}\n\n@mixin centerable-title() {\n    &_centered {\n        text-align: center;\n\n        & > * {\n            margin: 0 auto;\n        }\n    }\n}\n\n@mixin tab-panel() {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n\n    &_centered {\n        justify-content: center;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'md')) {\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        overflow: auto;\n\n        margin-left: -$indentL;\n        margin-right: -$indentL;\n        padding-left: $indentL;\n        padding-right: $indentL - $indentXXXS;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        margin-left: -$indentSM;\n        margin-right: -$indentSM;\n        padding-left: $indentSM;\n        padding-right: $indentXS;\n    }\n}\n\n// indent system for blocks\n@mixin indents($class) {\n    @include add-specificity($class) {\n        @include add-specificity(&) {\n            &_indentTop {\n                &_0 {\n                    margin-top: 0;\n                }\n\n                &_xs {\n                    margin-top: $indentXS;\n                }\n\n                &_s {\n                    margin-top: $indentSM;\n                }\n\n                &_m {\n                    margin-top: $indentM;\n                }\n\n                &_l {\n                    margin-top: $indentL;\n                }\n\n                &_xl {\n                    margin-top: $indentXL;\n                }\n            }\n\n            &_indentBottom {\n                &_0 {\n                    padding-bottom: 0;\n                }\n\n                &_xs {\n                    padding-bottom: $indentXS;\n                }\n\n                &_s {\n                    padding-bottom: $indentSM;\n                }\n\n                &_m {\n                    padding-bottom: $indentM;\n                }\n\n                &_l {\n                    padding-bottom: $indentL;\n                }\n\n                &_xl {\n                    padding-bottom: $indentXL;\n                }\n            }\n        }\n    }\n}\n\n@mixin media-border() {\n    &_border {\n        &_shadow {\n            @include image-shadow();\n        }\n\n        &_line {\n            border-radius: $borderRadius;\n            border: 1px solid var(--g-color-line-generic);\n        }\n\n        &_none {\n            border-radius: $borderRadius;\n        }\n    }\n}\n\n@mixin visibility-classes() {\n    @include add-specificity(&) {\n        &_hidden {\n            display: none;\n        }\n\n        // Преобразуем map в список ключей\n        $keys: map-keys($gridBreakpoints);\n        $length: length($keys);\n\n        @for $i from 1 through $length {\n            $current-key: nth($keys, $i);\n            $current-min: map-get($gridBreakpoints, $current-key);\n\n            @if $i < $length {\n                $next-key: nth($keys, $i + 1);\n                $next-min: map-get($gridBreakpoints, $next-key);\n                $current-max: ($next-min - 1px);\n\n                @media (min-width: $current-min) and (max-width: $current-max) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            } @else {\n                // Последний (до бесконечности)\n                @media (min-width: $current-min) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        // XS (0 до первого брейкпоинта)\n        $first-min: map-get($gridBreakpoints, nth($keys, 1));\n        @media (max-width: ($first-min - 1px)) {\n            &_visible-xs {\n                display: block;\n            }\n        }\n    }\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);