"use strict";(self.webpackChunk_gravity_ui_page_constructor=self.webpackChunk_gravity_ui_page_constructor||[]).push([[162],{"./src/components/Author/Author.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>components_Author_Author});var react=__webpack_require__("./node_modules/react/index.js"),common=__webpack_require__("./src/models/constructor-items/common.ts"),cn=__webpack_require__("./src/utils/cn.ts"),utils=__webpack_require__("./src/components/Media/Image/utils.ts"),Image=__webpack_require__("./src/components/Image/Image.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),Author=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/Author/Author.scss"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(Author.Z,options);Author.Z.locals;const b=(0,cn.Ge)("author"),Author_Author_Author=props=>{const{author,className,authorContainerClassName,type=common.Tq.Column,qa,theme}=props,{firstName,secondName,description,avatar}=author,name=secondName?`${firstName} ${secondName}`:firstName,isAvatarJSX=react.isValidElement(avatar);let avatarProps={};return!isAvatarJSX&&avatar&&(avatarProps=(0,utils.B)(avatar)),react.createElement("div",{className:b({type,theme},className),"data-qa":qa},avatar&&react.createElement("div",{className:b("avatar",authorContainerClassName)},isAvatarJSX?avatar:react.createElement(Image.Z,avatarProps)),react.createElement("div",{className:b("label")},react.createElement("div",{className:b("name")},name),description&&react.createElement("div",{className:b("description")},description)))},components_Author_Author=Author_Author_Author;Author_Author_Author.__docgenInfo={description:"",methods:[],displayName:"Author",props:{qa:{required:!1,tsType:{name:"string"},description:""},author:{required:!0,tsType:{name:"AuthorItem"},description:""},className:{required:!1,tsType:{name:"string"},description:""},authorContainerClassName:{required:!1,tsType:{name:"string"},description:""},type:{required:!1,tsType:{name:"AuthorType"},description:""},theme:{required:!1,tsType:{name:"union",raw:"'default' | 'dark' | 'light'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'dark'"},{name:"literal",value:"'light'"}]},description:""}}}},"./src/sub-blocks/Quote/Quote.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>sub_blocks_Quote_Quote});var react=__webpack_require__("./node_modules/react/index.js"),Author=__webpack_require__("./src/components/Author/Author.tsx"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Image=__webpack_require__("./src/components/Image/Image.tsx"),HTML=__webpack_require__("./src/components/HTML/HTML.tsx"),YFMWrapper=__webpack_require__("./src/components/YFMWrapper/YFMWrapper.tsx"),utils=__webpack_require__("./src/components/Media/Image/utils.ts"),useTheme=__webpack_require__("./src/context/theme/useTheme.ts"),useAnalytics=__webpack_require__("./src/hooks/useAnalytics.ts"),common=__webpack_require__("./src/models/constructor-items/common.ts"),models_common=__webpack_require__("./src/models/common.ts"),cn=__webpack_require__("./src/utils/cn.ts"),utils_theme=__webpack_require__("./src/utils/theme.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),Quote=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sub-blocks/Quote/Quote.scss"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(Quote.Z,options);Quote.Z.locals;function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const b=(0,cn.Ge)("quote"),Quote_Quote_Quote=props=>{const{theme:textTheme="light",color,image,border="shadow",text,yfmText,logo,author,url,urlTitle,buttonText,quoteType=common.Q_.Chevron,button}=props,theme=(0,useTheme.F)(),imageThemed=(0,utils_theme.U)(image,theme),imageData=(0,utils.B)(imageThemed),handleAnalytics=(0,useAnalytics.z)(models_common.IZ.QuoteButton,url),handleButtonClick=(0,react.useCallback)((()=>handleAnalytics()),[handleAnalytics]),themedAuthor=author?{...author,avatar:(0,utils_theme.U)(author.avatar,theme)}:author,renderFooter=Boolean(author||url)&&react.createElement("div",{className:b("author-wrapper")},themedAuthor&&react.createElement(Author.Z,{className:b("author",{theme:textTheme}),author:themedAuthor,type:common.Tq.Line,theme:textTheme}),url&&buttonText&&!button&&react.createElement(Button.Z,{theme:"outlined",size:"xl",url,className:b("link-button",{theme:textTheme}),onClick:handleButtonClick,urlTitle,text:buttonText}),button&&react.createElement(Button.Z,_extends({size:"xl"},button))),themedLogoProps=(0,utils_theme.U)(logo,theme),logoProps=(0,utils.B)(themedLogoProps);return react.createElement("div",{className:b({theme:textTheme,border}),style:color?{backgroundColor:color}:{}},react.createElement("div",{key:text,className:b("content-wrapper")},react.createElement("div",null,react.createElement(Image.Z,_extends({className:b("logo")},logoProps)),react.createElement("div",{className:b("content",{"quote-type":quoteType})},text&&react.createElement("span",{className:b("text")},react.createElement(HTML.Z,null,text)),yfmText&&react.createElement(YFMWrapper.Z,{className:b("text"),content:yfmText,modifiers:{constructor:!0}}))),renderFooter),react.createElement("div",{className:b("image-wrapper")},react.createElement(Image.Z,_extends({},imageData,{className:b("image")}))))},sub_blocks_Quote_Quote=Quote_Quote_Quote;Quote_Quote_Quote.__docgenInfo={description:"",methods:[],displayName:"Quote",props:{theme:{required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:""},border:{required:!1,tsType:{name:"union",raw:"'shadow' | 'line' | 'none'",elements:[{name:"literal",value:"'shadow'"},{name:"literal",value:"'line'"},{name:"literal",value:"'none'"}]},description:""},text:{required:!1,tsType:{name:"string"},description:""},yfmText:{required:!1,tsType:{name:"string"},description:""},image:{required:!0,tsType:{name:"union",raw:"T | ThemedValue<T>",elements:[{name:"union",raw:"string | ImageObjectProps | ImageDeviceProps",elements:[{name:"string"},{name:"ImageObjectProps"},{name:"ImageDeviceProps"}]},{name:"ThemedValue",elements:[{name:"union",raw:"string | ImageObjectProps | ImageDeviceProps",elements:[{name:"string"},{name:"ImageObjectProps"},{name:"ImageDeviceProps"}]}],raw:"ThemedValue<T>"}]},description:""},logo:{required:!0,tsType:{name:"union",raw:"T | ThemedValue<T>",elements:[{name:"union",raw:"string | ImageObjectProps | ImageDeviceProps",elements:[{name:"string"},{name:"ImageObjectProps"},{name:"ImageDeviceProps"}]},{name:"ThemedValue",elements:[{name:"union",raw:"string | ImageObjectProps | ImageDeviceProps",elements:[{name:"string"},{name:"ImageObjectProps"},{name:"ImageDeviceProps"}]}],raw:"ThemedValue<T>"}]},description:""},color:{required:!1,tsType:{name:"string"},description:""},url:{required:!1,tsType:{name:"string"},description:"@deprecated use property button instead"},urlTitle:{required:!1,tsType:{name:"string"},description:"@deprecated use property button instead"},author:{required:!1,tsType:{name:"AuthorItem"},description:""},buttonText:{required:!1,tsType:{name:"string"},description:"@deprecated use property button instead"},quoteType:{required:!1,tsType:{name:"QuoteType"},description:""},button:{required:!1,tsType:{name:"ButtonProps"},description:""}}}},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/Author/Author.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".pc-author{font-size:var(--g-text-body-3-font-size, var(--pc-text-body-3-font-size));line-height:var(--g-text-body-3-line-height, var(--pc-text-body-3-line-height));display:flex;flex-direction:column}.pc-author__avatar{width:80px;height:80px;display:flex;align-items:center;flex:0 0 auto;border-radius:16px;overflow:hidden}.pc-author__avatar img{width:80px;height:80px;object-fit:cover;display:block}.pc-author__name{font-size:var(--g-text-body-3-font-size, var(--pc-text-body-3-font-size));line-height:var(--g-text-body-3-line-height, var(--pc-text-body-3-line-height))}.pc-author__description{font-size:var(--g-text-body-2-font-size, var(--pc-text-body-2-font-size));line-height:var(--g-text-body-2-line-height, var(--pc-text-body-2-line-height));color:var(--g-color-text-secondary);padding-top:4px}.pc-author__label:not(:first-child){font-weight:400;margin-top:8px}.pc-author_type_column{z-index:1;position:relative}.pc-author_type_line{flex-flow:row nowrap;align-items:center;width:100%}.pc-author_type_line .pc-author__avatar{margin:0}.pc-author_type_line .pc-author__label{margin-top:0}.pc-author_type_line .pc-author__label:not(:first-child){margin-left:16px}.pc-author_theme_dark .pc-author__description{color:var(--g-color-text-light-secondary)}","",{version:3,sources:["webpack://./src/components/Author/Author.scss","webpack://./styles/mixins.scss","webpack://./styles/variables.scss"],names:[],mappings:"AAQA,WCFI,yEAAA,CACA,+EAAA,CDMA,YAAA,CACA,qBAAA,CAEA,mBACI,UAbK,CAcL,WAbM,CAcN,YAAA,CACA,kBAAA,CACA,aAAA,CACA,kBEZG,CFaH,eAAA,CAEA,uBACI,UAtBC,CAuBD,WAtBE,CAuBF,gBAAA,CACA,aAAA,CAIR,iBC3BA,yEAAA,CACA,+EAAA,CD8BA,wBC/BA,yEAAA,CACA,+EAAA,CDiCI,mCAAA,CACA,eElCI,CFqCR,oCACI,eAAA,CACA,cEtCK,CFyCT,uBACI,SAAA,CACA,iBAAA,CAGJ,qBACI,oBAAA,CACA,kBAAA,CACA,UAAA,CAEA,wCACI,QAAA,CAGJ,uCACI,YAAA,CAGJ,yDACI,gBE1DD,CFgEC,8CACI,yCElCC",sourcesContent:["@import '../../../styles/variables';\n@import '../../../styles/mixins';\n\n$block: '.#{$ns}author';\n$imageWidth: 80px;\n$imageHeight: 80px;\n$authorBorderRadius: $indentXS;\n\n#{$block} {\n    $root: &;\n\n    @include text-size(body-3);\n\n    display: flex;\n    flex-direction: column;\n\n    &__avatar {\n        width: $imageWidth;\n        height: $imageHeight;\n        display: flex;\n        align-items: center;\n        flex: 0 0 auto;\n        border-radius: $authorBorderRadius;\n        overflow: hidden;\n\n        img {\n            width: $imageWidth;\n            height: $imageHeight;\n            object-fit: cover;\n            display: block;\n        }\n    }\n\n    &__name {\n        @include text-size(body-3);\n    }\n\n    &__description {\n        @include text-size(body-2);\n\n        color: $secondary;\n        padding-top: $indent4XS;\n    }\n\n    &__label:not(:first-child) {\n        font-weight: 400;\n        margin-top: $indentXXXS;\n    }\n\n    &_type_column {\n        z-index: 1;\n        position: relative;\n    }\n\n    &_type_line {\n        flex-flow: row nowrap;\n        align-items: center;\n        width: 100%;\n\n        #{$root}__avatar {\n            margin: 0;\n        }\n\n        #{$root}__label {\n            margin-top: 0;\n        }\n\n        #{$root}__label:not(:first-child) {\n            margin-left: $indentXS;\n        }\n    }\n\n    &_theme {\n        &_dark {\n            #{$root}__description {\n                color: $lightSecondary;\n            }\n        }\n    }\n}\n","@import '@gravity-ui/uikit/styles/mixins.scss';\n@import './variables.scss';\n\n//common\n\n@mixin text-size($name) {\n    font-size: var(--g-text-#{$name}-font-size, var(--pc-text-#{$name}-font-size));\n    line-height: var(--g-text-#{$name}-line-height, var(--pc-text-#{$name}-line-height));\n}\n\n@mixin focusable($offset: 0, $mode: 'outline') {\n    @if $mode == 'outline' {\n        &:focus {\n            outline: 2px solid var(--g-color-line-focus);\n            outline-offset: $offset;\n        }\n        &:focus:not(:focus-visible) {\n            outline: 0;\n        }\n    }\n    @if $mode == 'box-shadow' {\n        &:focus {\n            box-shadow: 0 0 0 2px var(--g-color-line-focus);\n        }\n        &:focus:not(:focus-visible) {\n            box-shadow: none;\n        }\n    }\n}\n\n@mixin link() {\n    @include islands-focus();\n\n    color: var(--g-color-text-link);\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n        color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin anchor($offset: 0px) {\n    display: block;\n    position: relative;\n    top: calc(-1 * var(--header-height) - #{$offset});\n    visibility: hidden;\n}\n\n@mixin mobile-scrollable($offset: $normalOffset) {\n    margin-left: -$offset;\n    padding-left: $offset;\n    padding-right: $offset;\n    width: calc(100% + #{$offset} * 2);\n    overflow-x: auto;\n\n    &::after {\n        content: '';\n        height: 1px;\n        padding-right: $offset;\n    }\n}\n\n@mixin reset-button-style() {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n    border: none;\n    outline: none;\n    color: inherit;\n    background: none;\n    cursor: pointer;\n}\n\n@mixin reset-link-style() {\n    color: inherit;\n    text-decoration: none;\n}\n\n@mixin reset-list-style() {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n@mixin islands-focus() {\n    outline: none;\n\n    .utilityfocus &:focus {\n        outline: 2px solid #ffdb4d;\n    }\n}\n\n@mixin shadow-hover($pseudo: before) {\n    position: relative;\n\n    &::#{$pseudo} {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n\n        border-radius: inherit;\n        box-shadow: var(--shadow-offset-x, 0) var(--shadow-offset-y, 0) var(--shadow-blur, 10px)\n            var(--shadow-spread, 0) var(--shadow-color, --pc-color-sfx-shadow);\n        opacity: var(--shadow-opacity, 0.4);\n        transition: opacity ease-in var(--shadow-transition-time, 0.15s);\n    }\n}\n\n@mixin up-hover($color: var(--pc-color-sfx-shadow)) {\n    @include shadow-hover(before);\n\n    --shadow-offset-y: 5px;\n    --shadow-blur: 12px;\n    --shadow-color: #{$color};\n    --shadow-opacity: 0;\n\n    &:hover {\n        --shadow-opacity: 1;\n    }\n\n    .mobile &::before {\n        box-shadow: none;\n    }\n}\n\n@mixin header-link() {\n    @include link;\n\n    --pc-text-header-color: var(--g-color-text-link);\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin icon($size: 32px) {\n    width: $size;\n    height: $size;\n    background-size: cover;\n}\n\n@mixin top-content-offset($offset) {\n    top: calc(var(--header-height) + #{$offset});\n}\n\n@mixin label($size: m) {\n    @if $size == m {\n        @include text-size(body-1);\n\n        $label-height: 20px;\n\n        display: inline-block;\n        padding: 0 8px;\n        border-radius: 2px;\n        height: $label-height;\n        line-height: $label-height;\n    }\n\n    @if $size == s {\n        @include text-size(caption-2);\n\n        $label-height: 16px;\n\n        padding: 0 $indent4XS;\n        height: $label-height;\n        line-height: $label-height;\n    }\n}\n\n//constructor\n\n@mixin block {\n    @include add-specificity(&) {\n        margin-top: $indentL;\n        padding: 0 0 $indentL;\n\n        &:first-child {\n            // @deprecated\n            margin-top: var(--pc-first-block-indent, #{$indentXXL});\n        }\n    }\n}\n\n@mixin add-theme() {\n    &_theme_dark {\n        color: var(--g-color-text-light-primary);\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        .yfm {\n            color: var(--g-color-text-light-primary);\n        }\n    }\n}\n\n@mixin justify() {\n    &_justify_center {\n        text-align: center;\n    }\n\n    &_justify_end {\n        text-align: right;\n    }\n}\n\n@mixin background() {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n}\n\n@mixin shadow() {\n    @extend %shadow-hover;\n}\n\n%shadow {\n    box-shadow: 0px 4px 24px var(--pc-color-sfx-shadow), 0px 2px 8px var(--pc-color-sfx-shadow);\n}\n\n%shadow-hover {\n    @extend %shadow;\n\n    &:hover {\n        box-shadow: 0px 4px 24px var(--g-color-sfx-shadow), 0px 2px 8px var(--g-color-sfx-shadow);\n        cursor: pointer;\n    }\n}\n\n@mixin card-hover() {\n    transition: transform 0.3s ease-out;\n    &:hover {\n        transform: translateY(-8px);\n    }\n}\n\n@mixin image-shadow() {\n    box-shadow: 0 2px 8px var(--pc-color-sfx-shadow), 0 4px 24px var(--pc-color-sfx-shadow);\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n}\n\n@mixin card-border($hover: false) {\n    &_border_line {\n        border: 1px solid var(--g-color-line-generic);\n    }\n\n    &_border_line,\n    &_border_none {\n        @if $hover {\n            @include card-hover();\n        }\n    }\n\n    &_border_shadow {\n        @extend %shadow;\n        @if $hover {\n            @include card-hover();\n            &:hover {\n                background-color: var(--pc-color-base-float-hover);\n            }\n        }\n    }\n}\n\n@mixin card($hover: false) {\n    min-height: 248px;\n    height: 100%;\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n    background-color: var(--g-color-base-float);\n\n    transition: box-shadow 0.3s $ease-out-cubic;\n    @include card-border($hover);\n}\n\n@mixin card-image {\n    margin: $imagePadding;\n    border-radius: calc(#{$borderRadius} - #{$imagePadding});\n}\n\n@mixin reset-link-hover {\n    &:hover,\n    &:active {\n        --pc-text-header-color: inherit;\n        color: inherit;\n    }\n}\n\n@mixin animate-wrap {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        &.#{$ns}AnimateBlock,\n        .#{$ns}AnimateBlock & {\n            @content;\n        }\n    }\n}\n\n@mixin animate($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            top: 0;\n            opacity: 1;\n            transition: top $transition, opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-fade($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            opacity: 1;\n            transition: opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-slides($item-class, $delay: 0s) {\n    @include animate-wrap {\n        & #{$item-class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate {\n            #{$item-class} {\n                top: 0;\n                opacity: 1;\n                transition: top $transition, opacity $transition;\n            }\n\n            @for $i from 0 through 99 {\n                #{$item-class}:nth-child(#{$i}) {\n                    transition-delay: $i * 0.1s + $delay;\n                }\n            }\n        }\n    }\n}\n\n@mixin desktop-only() {\n    @media (max-width: map-get($gridBreakpoints, 'md') - 1) {\n        display: none;\n    }\n}\n\n@mixin desktop-tablet-only() {\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        display: none;\n    }\n}\n\n@mixin mobile-tablet-only() {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        display: none;\n    }\n}\n\n@mixin mobile-only() {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        display: none;\n    }\n}\n\n//typografy\n%heading-margin-reset {\n    margin: 0;\n}\n\n@mixin heading($name) {\n    @include text-size($name);\n    color: var(--pc-text-header-color);\n    @extend %heading-margin-reset;\n    @include text-accent();\n}\n\n@mixin heading0 {\n    @include heading(display-5);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-3);\n    }\n}\n\n@mixin heading1 {\n    @include heading(display-4);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-2);\n    }\n}\n\n@mixin heading2 {\n    @include heading(display-2);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        @include text-size(display-1);\n    }\n}\n\n@mixin heading3 {\n    @include heading(header-2);\n}\n\n@mixin heading4 {\n    @include heading(header-1);\n}\n\n@mixin heading5 {\n    @include heading(body-3);\n}\n\n@mixin heading6 {\n    @include heading(body-3);\n}\n\n@mixin paragraph {\n    margin: 0 0 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n/* use this for style redefinitions to awoid problems with\nunpredictable css rules order in build */\n\n@mixin add-specificity($class) {\n    @at-root {\n        #{$class}#{$class} {\n            @content;\n        }\n    }\n}\n\n@mixin slider-shadow-fix($class) {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        @at-root {\n            //fix for hidden slider cards box-shadow overflow\n            // .slick-slide:not(.slick-active) #{$class} {\n            //     box-shadow: none;\n            // }\n\n            //fix for new slider hidden cards\n            .swiper-slide:not(.swiper-slide-visible) #{$class} {\n                box-shadow: none;\n            }\n        }\n    }\n}\n\n@mixin font-feature-settings {\n    font-feature-settings: 'liga', 'kern', 'pnum' on, 'lnum' on, 'ss03' on;\n}\n\n@mixin navigation-popup {\n    z-index: 101;\n\n    display: flex;\n    flex-direction: column;\n\n    min-width: 220px;\n    padding: $indentXS;\n\n    border: 1px solid var(--g-color-line-generic);\n    border-top-width: 0;\n    border-radius: calc(#{$borderRadius} / 2);\n    background: var(--g-color-base-float);\n    box-shadow: 0 3px 10px var(--g-color-sfx-shadow);\n}\n\n@mixin navigation-item {\n    color: var(--g-color-text-primary);\n    @include reset-link-style();\n    @include islands-focus();\n\n    &:hover,\n    &_active {\n        color: var(--g-color-text-link);\n    }\n}\n\n@mixin button($color, $backgroundColor, $hoverColor: $color, $hoverBackgroundColor) {\n    --g-button-background-color: #{$backgroundColor};\n    --g-button-background-color-hover: #{$hoverBackgroundColor};\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:focus {\n        color: $color;\n    }\n\n    &:hover {\n        color: $hoverColor;\n    }\n}\n\n@mixin monochrome-button() {\n    @include add-specificity(&) {\n        @include button(\n            var(--pc-monochrome-button-color),\n            var(--pc-monochrome-button-background-color),\n            $hoverBackgroundColor: var(--pc-monochrome-button-background-color-hover)\n        );\n    }\n}\n\n@mixin centerable-title() {\n    &_centered {\n        text-align: center;\n\n        & > * {\n            margin: 0 auto;\n        }\n    }\n}\n\n@mixin tab-panel() {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n\n    &_centered {\n        justify-content: center;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'md')) {\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        overflow: auto;\n\n        margin-left: -$indentL;\n        margin-right: -$indentL;\n        padding-left: $indentL;\n        padding-right: $indentL - $indentXXXS;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        margin-left: -$indentSM;\n        margin-right: -$indentSM;\n        padding-left: $indentSM;\n        padding-right: $indentXS;\n    }\n}\n\n// indent system for blocks\n@mixin indents($class) {\n    @include add-specificity($class) {\n        @include add-specificity(&) {\n            &_indentTop {\n                &_0 {\n                    margin-top: 0;\n                }\n\n                &_xs {\n                    margin-top: $indentXS;\n                }\n\n                &_s {\n                    margin-top: $indentSM;\n                }\n\n                &_m {\n                    margin-top: $indentM;\n                }\n\n                &_l {\n                    margin-top: $indentL;\n                }\n\n                &_xl {\n                    margin-top: $indentXL;\n                }\n            }\n\n            &_indentBottom {\n                &_0 {\n                    padding-bottom: 0;\n                }\n\n                &_xs {\n                    padding-bottom: $indentXS;\n                }\n\n                &_s {\n                    padding-bottom: $indentSM;\n                }\n\n                &_m {\n                    padding-bottom: $indentM;\n                }\n\n                &_l {\n                    padding-bottom: $indentL;\n                }\n\n                &_xl {\n                    padding-bottom: $indentXL;\n                }\n            }\n        }\n    }\n}\n\n@mixin media-border() {\n    &_border {\n        &_shadow {\n            @include image-shadow();\n        }\n\n        &_line {\n            border-radius: $borderRadius;\n            border: 1px solid var(--g-color-line-generic);\n        }\n\n        &_none {\n            border-radius: $borderRadius;\n        }\n    }\n}\n\n@mixin visibility-classes() {\n    @include add-specificity(&) {\n        &_hidden {\n            display: none;\n        }\n\n        // Преобразуем map в список ключей\n        $keys: map-keys($gridBreakpoints);\n        $length: length($keys);\n\n        @for $i from 1 through $length {\n            $current-key: nth($keys, $i);\n            $current-min: map-get($gridBreakpoints, $current-key);\n\n            @if $i < $length {\n                $next-key: nth($keys, $i + 1);\n                $next-min: map-get($gridBreakpoints, $next-key);\n                $current-max: ($next-min - 1px);\n\n                @media (min-width: $current-min) and (max-width: $current-max) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            } @else {\n                // Последний (до бесконечности)\n                @media (min-width: $current-min) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        // XS (0 до первого брейкпоинта)\n        $first-min: map-get($gridBreakpoints, nth($keys, 1));\n        @media (max-width: ($first-min - 1px)) {\n            &_visible-xs {\n                display: block;\n            }\n        }\n    }\n}\n","//common\n\n$ns: 'pc-';\n$borderRadius: var(--pc-border-radius);\n$imagePadding: var(--pc-image-padding);\n\n//indents\n$indent4XS: 4px;\n$indentXXXS: 8px;\n$indentXXS: 12px;\n$indentXS: 16px;\n$indentS: 20px;\n$indentSM: 24px;\n$indentM: 32px;\n$indentL: 48px;\n$indentXL: 64px;\n$indentXXL: 96px;\n$indentXXXL: 128px;\n$indent4XL: 160px;\n$normalOffset: 20px;\n$contentMargin: $indentM;\n\n$contentLiftIndent: $indentXL;\n$contentLiftIndentMobile: $indentM;\n\n$navigationIconIndent: 6px;\n\n//slider\n$sliderArrowSize: 42px;\n$headerSliderLargeBreakpoint: 1410px;\n\n//animation\n$ease-out-quadratic: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-out-cubic: cubic-bezier(0.22, 0.61, 0.36, 1);\n$transition: 0.8s $ease-out-quadratic;\n$animationDuration: 300ms;\n\n//colors\n$videoPlayButtonGrey: #eff2f8;\n$videoPlayerBg: #000;\n$secondary: var(--g-color-text-secondary);\n$lightSecondary: var(--g-color-text-light-secondary);\n\n//grid\n$newContentWidth: 1232px;\n$gridBreakpoints: (\n    'sm': 577px,\n    'md': 769px,\n    'lg': 1081px,\n    'xl': 1185px,\n    'xxl': 1248px,\n);\n\n$gridGutter: 8px;\n$gridContainerPadding: 40px;\n$gridGutterMobile: 8px;\n$contentWidth: calc(#{$newContentWidth} + #{$gridGutter} * 2 + #{$gridContainerPadding} * 2);\n\n$gridContainerMargin: 16px;\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sub-blocks/Quote/Quote.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.pc-quote_border_shadow{box-shadow:0px 4px 24px var(--pc-color-sfx-shadow),0px 2px 8px var(--pc-color-sfx-shadow)}.pc-quote{min-height:248px;height:100%;overflow-x:hidden;border-radius:var(--pc-border-radius);background-color:var(--g-color-base-float);transition:box-shadow .3s cubic-bezier(0.22, 0.61, 0.36, 1);display:flex;min-height:400px;height:100%}.pc-quote_theme_dark{color:var(--g-color-text-light-primary)}.pc-quote_theme_dark h1,.pc-quote_theme_dark h2,.pc-quote_theme_dark h3,.pc-quote_theme_dark h4,.pc-quote_theme_dark h5,.pc-quote_theme_dark h6,.pc-quote_theme_dark .yfm{color:var(--g-color-text-light-primary)}.pc-quote_border_line{border:1px solid var(--g-color-line-generic)}@media(min-width: 577px){.swiper-slide:not(.swiper-slide-visible) .pc-quote{box-shadow:none}}.pc-quote__logo{height:48px}.pc-quote__content-wrapper{display:flex;flex-direction:column;justify-content:space-between;width:calc(50% + 5px * 2);margin-right:5px;padding:48px 32px 48px 48px}.pc-quote__image-wrapper{flex:1;margin-left:5px;overflow:hidden;margin:var(--pc-image-padding);border-radius:calc(var(--pc-border-radius) - var(--pc-image-padding))}.pc-quote__content{margin-top:24px;position:relative;font-size:var(--g-text-body-3-font-size, var(--pc-text-body-3-font-size));line-height:var(--g-text-body-3-line-height, var(--pc-text-body-3-line-height))}.pc-quote__content_quote-type_chevron::before{position:absolute;left:-10px;content:"«"}.pc-quote__content_quote-type_chevron .pc-quote__text::after{content:"»"}.pc-quote__content_quote-type_english-double::before{position:absolute;left:-8px;content:"“"}.pc-quote__content_quote-type_english-double .pc-quote__text::after{content:"”"}.pc-quote__content .yfm{font-size:var(--g-text-body-3-font-size, var(--pc-text-body-3-font-size));line-height:var(--g-text-body-3-line-height, var(--pc-text-body-3-line-height))}.pc-quote__content .yfm>*{display:inline}.pc-quote__content .yfm:after{position:relative;left:-5px}.pc-quote__image{width:100%;height:100%;object-fit:cover}.pc-quote__author-wrapper{display:flex;justify-content:space-between;align-items:flex-end;margin-top:20px}.pc-quote__author{max-width:calc(60% - 20px);margin-right:20px}.pc-quote__link-button_theme_dark{color:var(--g-color-base-background) !important}.pc-quote__link-button_theme_dark:before{border-color:var(--g-color-base-background) !important}@media(max-width: 1081px){.pc-quote__author-wrapper{flex-direction:column}.pc-quote__author{margin-right:0;margin-bottom:32px;max-width:initial}.pc-quote__link-button{align-self:flex-start}}@media(max-width: 769px){.pc-quote__content-wrapper{width:calc(75% + 5px * 2)}}@media(max-width: 577px){.pc-quote__image-wrapper{display:none}.pc-quote__content-wrapper{padding:32px}.pc-quote__content-wrapper{width:100%}}',"",{version:3,sources:["webpack://./src/sub-blocks/Quote/Quote.scss","webpack://./styles/mixins.scss","webpack://./styles/variables.scss"],names:[],mappings:"AAAA,wBCoOA,yFACI,CAAA,UDhNJ,gBCiQI,CAAA,WACA,CAAA,iBACA,CAAA,qCCrRW,CAAA,0CDuRX,CAAA,2DAEA,CAAA,YD/PA,CAAA,gBACA,CAAA,WACA,CAAA,qBCkKA,uCACI,CAAA,0KAEA,uCAOI,CAAA,sBAoDR,4CACI,CAAA,yBA6MJ,mDAQQ,eACI,CAAA,CAAA,gBDrbZ,WEnBM,CAAA,2BFuBN,YACI,CAAA,qBACA,CAAA,6BACA,CAAA,yBAEA,CAAA,gBAnBE,CAAA,2BAqBF,CAAA,yBAGJ,MACI,CAAA,eAzBE,CAAA,eA2BF,CAAA,8BE9CO,CAAA,qED8RX,CAAA,mBD5OA,eE1CO,CAAA,iBF4CH,CAAA,yEClDJ,CAAA,+EACA,CAAA,8CAAA,iBDCQ,CAAA,UAoDyC,CAAA,WAAV,CAAA,6DA9C/B,WA8CoC,CAAA,qDArDxC,iBACI,CAAA,SAqDgD,CAAA,WAAV,CAAA,oEA/CtC,WA+C2C,CAAA,wBAG/C,yEC1DJ,CAAA,+EACA,CAAA,0BD2DQ,cACI,CAAA,8BAGJ,iBACI,CAAA,SACA,CAAA,iBAKZ,UACI,CAAA,WACA,CAAA,gBACA,CAAA,0BAGJ,YACI,CAAA,6BACA,CAAA,oBACA,CAAA,eE3EE,CAAA,kBF+EN,0BACI,CAAA,iBEhFE,CAAA,kCFsFF,+CACI,CAAA,yCAEA,sDACI,CAAA,0BAMZ,0BACI,qBACI,CAAA,kBAGJ,cACI,CAAA,kBEpGF,CAAA,iBFsGE,CAAA,uBAGJ,qBACI,CAAA,CAAA,yBAIR,2BACI,yBACI,CAAA,CAAA,yBAIR,yBACI,YACI,CAAA,2BAGJ,YEzHE,CAAA,2BF6HF,UACI,CAAA",sourcesContent:["@import '../../../styles/variables';\n@import '../../../styles/mixins';\n\n$block: '.#{$ns}quote';\n\n@mixin comma-type($name, $opening, $closing, $left-offset) {\n    &_#{$name} {\n        &::before {\n            position: absolute;\n            left: $left-offset;\n            content: $opening;\n        }\n\n        #{$block}__text {\n            &::after {\n                content: $closing;\n            }\n        }\n    }\n}\n\n#{$block} {\n    $arrowWidth: 16px;\n    $gap: 5px;\n\n    @include add-theme();\n    @include card();\n    @include slider-shadow-fix(&);\n\n    display: flex;\n    min-height: 400px;\n    height: 100%;\n\n    &__logo {\n        height: $indentL;\n    }\n\n    &__content-wrapper {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n\n        width: calc(50% + #{$gap} * 2);\n        margin-right: $gap;\n        padding: $indentL $indentM $indentL $indentL;\n    }\n\n    &__image-wrapper {\n        flex: 1;\n        margin-left: $gap;\n        overflow: hidden;\n        @include card-image();\n    }\n\n    &__content {\n        margin-top: $indentSM;\n        position: relative;\n        @include text-size(body-3);\n\n        &_quote-type {\n            @include comma-type('chevron', '«', '»', -10px);\n            @include comma-type('english-double', '“', '”', -8px);\n        }\n\n        .yfm {\n            @include text-size(body-3);\n            > * {\n                display: inline;\n            }\n\n            &:after {\n                position: relative;\n                left: -5px;\n            }\n        }\n    }\n\n    &__image {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    &__author-wrapper {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n        margin-top: $indentS;\n    }\n\n    &__author {\n        max-width: calc(60% - #{$indentS});\n        margin-right: $indentS;\n    }\n\n    &__link-button {\n        /* stylelint-disable declaration-no-important */\n        &_theme_dark {\n            color: var(--g-color-base-background) !important;\n\n            &:before {\n                border-color: var(--g-color-base-background) !important;\n            }\n        }\n        /* stylelint-enable declaration-no-important */\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'lg')) {\n        &__author-wrapper {\n            flex-direction: column;\n        }\n\n        &__author {\n            margin-right: 0;\n            margin-bottom: $indentM;\n            max-width: initial;\n        }\n\n        &__link-button {\n            align-self: flex-start;\n        }\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'md')) {\n        &__content-wrapper {\n            width: calc(75% + #{$gap} * 2);\n        }\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        &__image-wrapper {\n            display: none;\n        }\n\n        &__content-wrapper {\n            padding: $indentM;\n        }\n\n        &__content-wrapper {\n            width: 100%;\n        }\n    }\n}\n","@import '@gravity-ui/uikit/styles/mixins.scss';\n@import './variables.scss';\n\n//common\n\n@mixin text-size($name) {\n    font-size: var(--g-text-#{$name}-font-size, var(--pc-text-#{$name}-font-size));\n    line-height: var(--g-text-#{$name}-line-height, var(--pc-text-#{$name}-line-height));\n}\n\n@mixin focusable($offset: 0, $mode: 'outline') {\n    @if $mode == 'outline' {\n        &:focus {\n            outline: 2px solid var(--g-color-line-focus);\n            outline-offset: $offset;\n        }\n        &:focus:not(:focus-visible) {\n            outline: 0;\n        }\n    }\n    @if $mode == 'box-shadow' {\n        &:focus {\n            box-shadow: 0 0 0 2px var(--g-color-line-focus);\n        }\n        &:focus:not(:focus-visible) {\n            box-shadow: none;\n        }\n    }\n}\n\n@mixin link() {\n    @include islands-focus();\n\n    color: var(--g-color-text-link);\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n        color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin anchor($offset: 0px) {\n    display: block;\n    position: relative;\n    top: calc(-1 * var(--header-height) - #{$offset});\n    visibility: hidden;\n}\n\n@mixin mobile-scrollable($offset: $normalOffset) {\n    margin-left: -$offset;\n    padding-left: $offset;\n    padding-right: $offset;\n    width: calc(100% + #{$offset} * 2);\n    overflow-x: auto;\n\n    &::after {\n        content: '';\n        height: 1px;\n        padding-right: $offset;\n    }\n}\n\n@mixin reset-button-style() {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n    border: none;\n    outline: none;\n    color: inherit;\n    background: none;\n    cursor: pointer;\n}\n\n@mixin reset-link-style() {\n    color: inherit;\n    text-decoration: none;\n}\n\n@mixin reset-list-style() {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n@mixin islands-focus() {\n    outline: none;\n\n    .utilityfocus &:focus {\n        outline: 2px solid #ffdb4d;\n    }\n}\n\n@mixin shadow-hover($pseudo: before) {\n    position: relative;\n\n    &::#{$pseudo} {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n\n        border-radius: inherit;\n        box-shadow: var(--shadow-offset-x, 0) var(--shadow-offset-y, 0) var(--shadow-blur, 10px)\n            var(--shadow-spread, 0) var(--shadow-color, --pc-color-sfx-shadow);\n        opacity: var(--shadow-opacity, 0.4);\n        transition: opacity ease-in var(--shadow-transition-time, 0.15s);\n    }\n}\n\n@mixin up-hover($color: var(--pc-color-sfx-shadow)) {\n    @include shadow-hover(before);\n\n    --shadow-offset-y: 5px;\n    --shadow-blur: 12px;\n    --shadow-color: #{$color};\n    --shadow-opacity: 0;\n\n    &:hover {\n        --shadow-opacity: 1;\n    }\n\n    .mobile &::before {\n        box-shadow: none;\n    }\n}\n\n@mixin header-link() {\n    @include link;\n\n    --pc-text-header-color: var(--g-color-text-link);\n\n    &:hover,\n    &:active {\n        --pc-text-header-color: var(--g-color-text-link-hover);\n    }\n}\n\n@mixin icon($size: 32px) {\n    width: $size;\n    height: $size;\n    background-size: cover;\n}\n\n@mixin top-content-offset($offset) {\n    top: calc(var(--header-height) + #{$offset});\n}\n\n@mixin label($size: m) {\n    @if $size == m {\n        @include text-size(body-1);\n\n        $label-height: 20px;\n\n        display: inline-block;\n        padding: 0 8px;\n        border-radius: 2px;\n        height: $label-height;\n        line-height: $label-height;\n    }\n\n    @if $size == s {\n        @include text-size(caption-2);\n\n        $label-height: 16px;\n\n        padding: 0 $indent4XS;\n        height: $label-height;\n        line-height: $label-height;\n    }\n}\n\n//constructor\n\n@mixin block {\n    @include add-specificity(&) {\n        margin-top: $indentL;\n        padding: 0 0 $indentL;\n\n        &:first-child {\n            // @deprecated\n            margin-top: var(--pc-first-block-indent, #{$indentXXL});\n        }\n    }\n}\n\n@mixin add-theme() {\n    &_theme_dark {\n        color: var(--g-color-text-light-primary);\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        .yfm {\n            color: var(--g-color-text-light-primary);\n        }\n    }\n}\n\n@mixin justify() {\n    &_justify_center {\n        text-align: center;\n    }\n\n    &_justify_end {\n        text-align: right;\n    }\n}\n\n@mixin background() {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n}\n\n@mixin shadow() {\n    @extend %shadow-hover;\n}\n\n%shadow {\n    box-shadow: 0px 4px 24px var(--pc-color-sfx-shadow), 0px 2px 8px var(--pc-color-sfx-shadow);\n}\n\n%shadow-hover {\n    @extend %shadow;\n\n    &:hover {\n        box-shadow: 0px 4px 24px var(--g-color-sfx-shadow), 0px 2px 8px var(--g-color-sfx-shadow);\n        cursor: pointer;\n    }\n}\n\n@mixin card-hover() {\n    transition: transform 0.3s ease-out;\n    &:hover {\n        transform: translateY(-8px);\n    }\n}\n\n@mixin image-shadow() {\n    box-shadow: 0 2px 8px var(--pc-color-sfx-shadow), 0 4px 24px var(--pc-color-sfx-shadow);\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n}\n\n@mixin card-border($hover: false) {\n    &_border_line {\n        border: 1px solid var(--g-color-line-generic);\n    }\n\n    &_border_line,\n    &_border_none {\n        @if $hover {\n            @include card-hover();\n        }\n    }\n\n    &_border_shadow {\n        @extend %shadow;\n        @if $hover {\n            @include card-hover();\n            &:hover {\n                background-color: var(--pc-color-base-float-hover);\n            }\n        }\n    }\n}\n\n@mixin card($hover: false) {\n    min-height: 248px;\n    height: 100%;\n    overflow-x: hidden;\n    border-radius: $borderRadius;\n    background-color: var(--g-color-base-float);\n\n    transition: box-shadow 0.3s $ease-out-cubic;\n    @include card-border($hover);\n}\n\n@mixin card-image {\n    margin: $imagePadding;\n    border-radius: calc(#{$borderRadius} - #{$imagePadding});\n}\n\n@mixin reset-link-hover {\n    &:hover,\n    &:active {\n        --pc-text-header-color: inherit;\n        color: inherit;\n    }\n}\n\n@mixin animate-wrap {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        &.#{$ns}AnimateBlock,\n        .#{$ns}AnimateBlock & {\n            @content;\n        }\n    }\n}\n\n@mixin animate($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            top: 0;\n            opacity: 1;\n            transition: top $transition, opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-fade($class: null, $delay: 0s) {\n    @include animate-wrap {\n        & #{$class} {\n            opacity: 0;\n        }\n\n        &.animate #{$class} {\n            opacity: 1;\n            transition: opacity $transition;\n            transition-delay: $delay;\n        }\n    }\n}\n\n@mixin animate-slides($item-class, $delay: 0s) {\n    @include animate-wrap {\n        & #{$item-class} {\n            position: relative;\n            top: 100px;\n            opacity: 0;\n        }\n\n        &.animate {\n            #{$item-class} {\n                top: 0;\n                opacity: 1;\n                transition: top $transition, opacity $transition;\n            }\n\n            @for $i from 0 through 99 {\n                #{$item-class}:nth-child(#{$i}) {\n                    transition-delay: $i * 0.1s + $delay;\n                }\n            }\n        }\n    }\n}\n\n@mixin desktop-only() {\n    @media (max-width: map-get($gridBreakpoints, 'md') - 1) {\n        display: none;\n    }\n}\n\n@mixin desktop-tablet-only() {\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        display: none;\n    }\n}\n\n@mixin mobile-tablet-only() {\n    @media (min-width: map-get($gridBreakpoints, 'md')) {\n        display: none;\n    }\n}\n\n@mixin mobile-only() {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        display: none;\n    }\n}\n\n//typografy\n%heading-margin-reset {\n    margin: 0;\n}\n\n@mixin heading($name) {\n    @include text-size($name);\n    color: var(--pc-text-header-color);\n    @extend %heading-margin-reset;\n    @include text-accent();\n}\n\n@mixin heading0 {\n    @include heading(display-5);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-3);\n    }\n}\n\n@mixin heading1 {\n    @include heading(display-4);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        @include text-size(display-2);\n    }\n}\n\n@mixin heading2 {\n    @include heading(display-2);\n\n    @media (max-width: map-get($gridBreakpoints, 'sm') - 1) {\n        @include text-size(display-1);\n    }\n}\n\n@mixin heading3 {\n    @include heading(header-2);\n}\n\n@mixin heading4 {\n    @include heading(header-1);\n}\n\n@mixin heading5 {\n    @include heading(body-3);\n}\n\n@mixin heading6 {\n    @include heading(body-3);\n}\n\n@mixin paragraph {\n    margin: 0 0 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n/* use this for style redefinitions to awoid problems with\nunpredictable css rules order in build */\n\n@mixin add-specificity($class) {\n    @at-root {\n        #{$class}#{$class} {\n            @content;\n        }\n    }\n}\n\n@mixin slider-shadow-fix($class) {\n    @media (min-width: map-get($gridBreakpoints, 'sm')) {\n        @at-root {\n            //fix for hidden slider cards box-shadow overflow\n            // .slick-slide:not(.slick-active) #{$class} {\n            //     box-shadow: none;\n            // }\n\n            //fix for new slider hidden cards\n            .swiper-slide:not(.swiper-slide-visible) #{$class} {\n                box-shadow: none;\n            }\n        }\n    }\n}\n\n@mixin font-feature-settings {\n    font-feature-settings: 'liga', 'kern', 'pnum' on, 'lnum' on, 'ss03' on;\n}\n\n@mixin navigation-popup {\n    z-index: 101;\n\n    display: flex;\n    flex-direction: column;\n\n    min-width: 220px;\n    padding: $indentXS;\n\n    border: 1px solid var(--g-color-line-generic);\n    border-top-width: 0;\n    border-radius: calc(#{$borderRadius} / 2);\n    background: var(--g-color-base-float);\n    box-shadow: 0 3px 10px var(--g-color-sfx-shadow);\n}\n\n@mixin navigation-item {\n    color: var(--g-color-text-primary);\n    @include reset-link-style();\n    @include islands-focus();\n\n    &:hover,\n    &_active {\n        color: var(--g-color-text-link);\n    }\n}\n\n@mixin button($color, $backgroundColor, $hoverColor: $color, $hoverBackgroundColor) {\n    --g-button-background-color: #{$backgroundColor};\n    --g-button-background-color-hover: #{$hoverBackgroundColor};\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:focus {\n        color: $color;\n    }\n\n    &:hover {\n        color: $hoverColor;\n    }\n}\n\n@mixin monochrome-button() {\n    @include add-specificity(&) {\n        @include button(\n            var(--pc-monochrome-button-color),\n            var(--pc-monochrome-button-background-color),\n            $hoverBackgroundColor: var(--pc-monochrome-button-background-color-hover)\n        );\n    }\n}\n\n@mixin centerable-title() {\n    &_centered {\n        text-align: center;\n\n        & > * {\n            margin: 0 auto;\n        }\n    }\n}\n\n@mixin tab-panel() {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n\n    &_centered {\n        justify-content: center;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'md')) {\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        overflow: auto;\n\n        margin-left: -$indentL;\n        margin-right: -$indentL;\n        padding-left: $indentL;\n        padding-right: $indentL - $indentXXXS;\n    }\n\n    @media (max-width: map-get($gridBreakpoints, 'sm')) {\n        margin-left: -$indentSM;\n        margin-right: -$indentSM;\n        padding-left: $indentSM;\n        padding-right: $indentXS;\n    }\n}\n\n// indent system for blocks\n@mixin indents($class) {\n    @include add-specificity($class) {\n        @include add-specificity(&) {\n            &_indentTop {\n                &_0 {\n                    margin-top: 0;\n                }\n\n                &_xs {\n                    margin-top: $indentXS;\n                }\n\n                &_s {\n                    margin-top: $indentSM;\n                }\n\n                &_m {\n                    margin-top: $indentM;\n                }\n\n                &_l {\n                    margin-top: $indentL;\n                }\n\n                &_xl {\n                    margin-top: $indentXL;\n                }\n            }\n\n            &_indentBottom {\n                &_0 {\n                    padding-bottom: 0;\n                }\n\n                &_xs {\n                    padding-bottom: $indentXS;\n                }\n\n                &_s {\n                    padding-bottom: $indentSM;\n                }\n\n                &_m {\n                    padding-bottom: $indentM;\n                }\n\n                &_l {\n                    padding-bottom: $indentL;\n                }\n\n                &_xl {\n                    padding-bottom: $indentXL;\n                }\n            }\n        }\n    }\n}\n\n@mixin media-border() {\n    &_border {\n        &_shadow {\n            @include image-shadow();\n        }\n\n        &_line {\n            border-radius: $borderRadius;\n            border: 1px solid var(--g-color-line-generic);\n        }\n\n        &_none {\n            border-radius: $borderRadius;\n        }\n    }\n}\n\n@mixin visibility-classes() {\n    @include add-specificity(&) {\n        &_hidden {\n            display: none;\n        }\n\n        // Преобразуем map в список ключей\n        $keys: map-keys($gridBreakpoints);\n        $length: length($keys);\n\n        @for $i from 1 through $length {\n            $current-key: nth($keys, $i);\n            $current-min: map-get($gridBreakpoints, $current-key);\n\n            @if $i < $length {\n                $next-key: nth($keys, $i + 1);\n                $next-min: map-get($gridBreakpoints, $next-key);\n                $current-max: ($next-min - 1px);\n\n                @media (min-width: $current-min) and (max-width: $current-max) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            } @else {\n                // Последний (до бесконечности)\n                @media (min-width: $current-min) {\n                    &_visible-#{$current-key} {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        // XS (0 до первого брейкпоинта)\n        $first-min: map-get($gridBreakpoints, nth($keys, 1));\n        @media (max-width: ($first-min - 1px)) {\n            &_visible-xs {\n                display: block;\n            }\n        }\n    }\n}\n","//common\n\n$ns: 'pc-';\n$borderRadius: var(--pc-border-radius);\n$imagePadding: var(--pc-image-padding);\n\n//indents\n$indent4XS: 4px;\n$indentXXXS: 8px;\n$indentXXS: 12px;\n$indentXS: 16px;\n$indentS: 20px;\n$indentSM: 24px;\n$indentM: 32px;\n$indentL: 48px;\n$indentXL: 64px;\n$indentXXL: 96px;\n$indentXXXL: 128px;\n$indent4XL: 160px;\n$normalOffset: 20px;\n$contentMargin: $indentM;\n\n$contentLiftIndent: $indentXL;\n$contentLiftIndentMobile: $indentM;\n\n$navigationIconIndent: 6px;\n\n//slider\n$sliderArrowSize: 42px;\n$headerSliderLargeBreakpoint: 1410px;\n\n//animation\n$ease-out-quadratic: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-out-cubic: cubic-bezier(0.22, 0.61, 0.36, 1);\n$transition: 0.8s $ease-out-quadratic;\n$animationDuration: 300ms;\n\n//colors\n$videoPlayButtonGrey: #eff2f8;\n$videoPlayerBg: #000;\n$secondary: var(--g-color-text-secondary);\n$lightSecondary: var(--g-color-text-light-secondary);\n\n//grid\n$newContentWidth: 1232px;\n$gridBreakpoints: (\n    'sm': 577px,\n    'md': 769px,\n    'lg': 1081px,\n    'xl': 1185px,\n    'xxl': 1248px,\n);\n\n$gridGutter: 8px;\n$gridContainerPadding: 40px;\n$gridGutterMobile: 8px;\n$contentWidth: calc(#{$newContentWidth} + #{$gridGutter} * 2 + #{$gridContainerPadding} * 2);\n\n$gridContainerMargin: 16px;\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);